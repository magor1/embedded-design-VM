
DA5T1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000472  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004c6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000538  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000184  00000000  00000000  00000560  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000010d  00000000  00000000  000006e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000131  00000000  00000000  000007f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00000924  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000195  00000000  00000000  00000958  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000007d  00000000  00000000  00000aed  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00000b6a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 51 00 	call	0xa2	; 0xa2 <main>
  78:	0c 94 37 02 	jmp	0x46e	; 0x46e <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <delayms>:
}

void delayms(int n) //delay function
{
	int i;
	for(i=0; i<n; i++)	//loop for n milliseconds
  80:	18 16       	cp	r1, r24
  82:	19 06       	cpc	r1, r25
  84:	6c f4       	brge	.+26     	; 0xa0 <delayms+0x20>
  86:	20 e0       	ldi	r18, 0x00	; 0
  88:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8a:	ef e9       	ldi	r30, 0x9F	; 159
  8c:	ff e0       	ldi	r31, 0x0F	; 15
  8e:	31 97       	sbiw	r30, 0x01	; 1
  90:	f1 f7       	brne	.-4      	; 0x8e <delayms+0xe>
  92:	00 c0       	rjmp	.+0      	; 0x94 <delayms+0x14>
  94:	00 00       	nop
  96:	2f 5f       	subi	r18, 0xFF	; 255
  98:	3f 4f       	sbci	r19, 0xFF	; 255
  9a:	28 17       	cp	r18, r24
  9c:	39 07       	cpc	r19, r25
  9e:	a9 f7       	brne	.-22     	; 0x8a <delayms+0xa>
  a0:	08 95       	ret

000000a2 <main>:
void delayms(int); //delay function. Uses milliseconds

int main(void)
{
	
	DDRD |= (1<<PD6); //OC0A output PWM
  a2:	56 9a       	sbi	0x0a, 6	; 10
	DDRC &= ~(1<<PC0); //potentiometer analog input
  a4:	38 98       	cbi	0x07, 0	; 7
	
	//configure ADC
	ADCSRA = 0x87;	//ADC enable, no interrupts, div factor 128
  a6:	87 e8       	ldi	r24, 0x87	; 135
  a8:	80 93 7a 00 	sts	0x007A, r24
	ADMUX = 0x60;	//Reference voltage = AVCC with external capacitor at AREF pin, left justified
  ac:	80 e6       	ldi	r24, 0x60	; 96
  ae:	80 93 7c 00 	sts	0x007C, r24
	uint8_t pot;	//holds value of pot from analog channel
	float motor_speed; //used to determine delays
	
	while(1)
	{
		ADCSRA |= (1<<ADSC); //start conversion
  b2:	ca e7       	ldi	r28, 0x7A	; 122
  b4:	d0 e0       	ldi	r29, 0x00	; 0
		while((ADCSRA &(1<<ADIF)) == 0); //wait for conversion to finish
		pot = ADCH;			//take value from upper byte of ADC
  b6:	09 e7       	ldi	r16, 0x79	; 121
  b8:	10 e0       	ldi	r17, 0x00	; 0
	uint8_t pot;	//holds value of pot from analog channel
	float motor_speed; //used to determine delays
	
	while(1)
	{
		ADCSRA |= (1<<ADSC); //start conversion
  ba:	88 81       	ld	r24, Y
  bc:	80 64       	ori	r24, 0x40	; 64
  be:	88 83       	st	Y, r24
		while((ADCSRA &(1<<ADIF)) == 0); //wait for conversion to finish
  c0:	88 81       	ld	r24, Y
  c2:	84 ff       	sbrs	r24, 4
  c4:	fd cf       	rjmp	.-6      	; 0xc0 <main+0x1e>
		pot = ADCH;			//take value from upper byte of ADC
  c6:	f8 01       	movw	r30, r16
  c8:	60 81       	ld	r22, Z
		
		motor_speed =  pot * 5.0 / 1024.0;	//scale the potentiometer value
  ca:	70 e0       	ldi	r23, 0x00	; 0
  cc:	80 e0       	ldi	r24, 0x00	; 0
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	0e 94 3e 01 	call	0x27c	; 0x27c <__floatsisf>
  d4:	20 e0       	ldi	r18, 0x00	; 0
  d6:	30 e0       	ldi	r19, 0x00	; 0
  d8:	40 ea       	ldi	r20, 0xA0	; 160
  da:	50 e4       	ldi	r21, 0x40	; 64
  dc:	0e 94 ca 01 	call	0x394	; 0x394 <__mulsf3>
  e0:	20 e0       	ldi	r18, 0x00	; 0
  e2:	30 e0       	ldi	r19, 0x00	; 0
  e4:	40 e8       	ldi	r20, 0x80	; 128
  e6:	5a e3       	ldi	r21, 0x3A	; 58
  e8:	0e 94 ca 01 	call	0x394	; 0x394 <__mulsf3>
  ec:	6b 01       	movw	r12, r22
  ee:	7c 01       	movw	r14, r24
		
		PORTD |= (1<<PD6);			//turn on motor
  f0:	5e 9a       	sbi	0x0b, 6	; 11
		delayms(motor_speed * 30);	//delay is determined by pot
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	40 ef       	ldi	r20, 0xF0	; 240
  f8:	51 e4       	ldi	r21, 0x41	; 65
  fa:	0e 94 ca 01 	call	0x394	; 0x394 <__mulsf3>
  fe:	0e 94 06 01 	call	0x20c	; 0x20c <__fixsfsi>
 102:	cb 01       	movw	r24, r22
 104:	0e 94 40 00 	call	0x80	; 0x80 <delayms>
		
		PORTD &= ~(1<<PD6);			//turn off motor
 108:	5e 98       	cbi	0x0b, 6	; 11
		delayms((1 - motor_speed) * 30); //time off = (1 - time on)
 10a:	a7 01       	movw	r20, r14
 10c:	96 01       	movw	r18, r12
 10e:	60 e0       	ldi	r22, 0x00	; 0
 110:	70 e0       	ldi	r23, 0x00	; 0
 112:	80 e8       	ldi	r24, 0x80	; 128
 114:	9f e3       	ldi	r25, 0x3F	; 63
 116:	0e 94 99 00 	call	0x132	; 0x132 <__subsf3>
 11a:	20 e0       	ldi	r18, 0x00	; 0
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	40 ef       	ldi	r20, 0xF0	; 240
 120:	51 e4       	ldi	r21, 0x41	; 65
 122:	0e 94 ca 01 	call	0x394	; 0x394 <__mulsf3>
 126:	0e 94 06 01 	call	0x20c	; 0x20c <__fixsfsi>
 12a:	cb 01       	movw	r24, r22
 12c:	0e 94 40 00 	call	0x80	; 0x80 <delayms>
		
	}
 130:	c4 cf       	rjmp	.-120    	; 0xba <main+0x18>

00000132 <__subsf3>:
 132:	50 58       	subi	r21, 0x80	; 128

00000134 <__addsf3>:
 134:	bb 27       	eor	r27, r27
 136:	aa 27       	eor	r26, r26
 138:	0e 94 b1 00 	call	0x162	; 0x162 <__addsf3x>
 13c:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_round>
 140:	0e 94 82 01 	call	0x304	; 0x304 <__fp_pscA>
 144:	38 f0       	brcs	.+14     	; 0x154 <__addsf3+0x20>
 146:	0e 94 89 01 	call	0x312	; 0x312 <__fp_pscB>
 14a:	20 f0       	brcs	.+8      	; 0x154 <__addsf3+0x20>
 14c:	39 f4       	brne	.+14     	; 0x15c <__addsf3+0x28>
 14e:	9f 3f       	cpi	r25, 0xFF	; 255
 150:	19 f4       	brne	.+6      	; 0x158 <__addsf3+0x24>
 152:	26 f4       	brtc	.+8      	; 0x15c <__addsf3+0x28>
 154:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <__fp_nan>
 158:	0e f4       	brtc	.+2      	; 0x15c <__addsf3+0x28>
 15a:	e0 95       	com	r30
 15c:	e7 fb       	bst	r30, 7
 15e:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <__fp_inf>

00000162 <__addsf3x>:
 162:	e9 2f       	mov	r30, r25
 164:	0e 94 a1 01 	call	0x342	; 0x342 <__fp_split3>
 168:	58 f3       	brcs	.-42     	; 0x140 <__addsf3+0xc>
 16a:	ba 17       	cp	r27, r26
 16c:	62 07       	cpc	r22, r18
 16e:	73 07       	cpc	r23, r19
 170:	84 07       	cpc	r24, r20
 172:	95 07       	cpc	r25, r21
 174:	20 f0       	brcs	.+8      	; 0x17e <__addsf3x+0x1c>
 176:	79 f4       	brne	.+30     	; 0x196 <__addsf3x+0x34>
 178:	a6 f5       	brtc	.+104    	; 0x1e2 <__addsf3x+0x80>
 17a:	0c 94 c3 01 	jmp	0x386	; 0x386 <__fp_zero>
 17e:	0e f4       	brtc	.+2      	; 0x182 <__addsf3x+0x20>
 180:	e0 95       	com	r30
 182:	0b 2e       	mov	r0, r27
 184:	ba 2f       	mov	r27, r26
 186:	a0 2d       	mov	r26, r0
 188:	0b 01       	movw	r0, r22
 18a:	b9 01       	movw	r22, r18
 18c:	90 01       	movw	r18, r0
 18e:	0c 01       	movw	r0, r24
 190:	ca 01       	movw	r24, r20
 192:	a0 01       	movw	r20, r0
 194:	11 24       	eor	r1, r1
 196:	ff 27       	eor	r31, r31
 198:	59 1b       	sub	r21, r25
 19a:	99 f0       	breq	.+38     	; 0x1c2 <__addsf3x+0x60>
 19c:	59 3f       	cpi	r21, 0xF9	; 249
 19e:	50 f4       	brcc	.+20     	; 0x1b4 <__addsf3x+0x52>
 1a0:	50 3e       	cpi	r21, 0xE0	; 224
 1a2:	68 f1       	brcs	.+90     	; 0x1fe <__addsf3x+0x9c>
 1a4:	1a 16       	cp	r1, r26
 1a6:	f0 40       	sbci	r31, 0x00	; 0
 1a8:	a2 2f       	mov	r26, r18
 1aa:	23 2f       	mov	r18, r19
 1ac:	34 2f       	mov	r19, r20
 1ae:	44 27       	eor	r20, r20
 1b0:	58 5f       	subi	r21, 0xF8	; 248
 1b2:	f3 cf       	rjmp	.-26     	; 0x19a <__addsf3x+0x38>
 1b4:	46 95       	lsr	r20
 1b6:	37 95       	ror	r19
 1b8:	27 95       	ror	r18
 1ba:	a7 95       	ror	r26
 1bc:	f0 40       	sbci	r31, 0x00	; 0
 1be:	53 95       	inc	r21
 1c0:	c9 f7       	brne	.-14     	; 0x1b4 <__addsf3x+0x52>
 1c2:	7e f4       	brtc	.+30     	; 0x1e2 <__addsf3x+0x80>
 1c4:	1f 16       	cp	r1, r31
 1c6:	ba 0b       	sbc	r27, r26
 1c8:	62 0b       	sbc	r22, r18
 1ca:	73 0b       	sbc	r23, r19
 1cc:	84 0b       	sbc	r24, r20
 1ce:	ba f0       	brmi	.+46     	; 0x1fe <__addsf3x+0x9c>
 1d0:	91 50       	subi	r25, 0x01	; 1
 1d2:	a1 f0       	breq	.+40     	; 0x1fc <__addsf3x+0x9a>
 1d4:	ff 0f       	add	r31, r31
 1d6:	bb 1f       	adc	r27, r27
 1d8:	66 1f       	adc	r22, r22
 1da:	77 1f       	adc	r23, r23
 1dc:	88 1f       	adc	r24, r24
 1de:	c2 f7       	brpl	.-16     	; 0x1d0 <__addsf3x+0x6e>
 1e0:	0e c0       	rjmp	.+28     	; 0x1fe <__addsf3x+0x9c>
 1e2:	ba 0f       	add	r27, r26
 1e4:	62 1f       	adc	r22, r18
 1e6:	73 1f       	adc	r23, r19
 1e8:	84 1f       	adc	r24, r20
 1ea:	48 f4       	brcc	.+18     	; 0x1fe <__addsf3x+0x9c>
 1ec:	87 95       	ror	r24
 1ee:	77 95       	ror	r23
 1f0:	67 95       	ror	r22
 1f2:	b7 95       	ror	r27
 1f4:	f7 95       	ror	r31
 1f6:	9e 3f       	cpi	r25, 0xFE	; 254
 1f8:	08 f0       	brcs	.+2      	; 0x1fc <__addsf3x+0x9a>
 1fa:	b0 cf       	rjmp	.-160    	; 0x15c <__addsf3+0x28>
 1fc:	93 95       	inc	r25
 1fe:	88 0f       	add	r24, r24
 200:	08 f0       	brcs	.+2      	; 0x204 <__addsf3x+0xa2>
 202:	99 27       	eor	r25, r25
 204:	ee 0f       	add	r30, r30
 206:	97 95       	ror	r25
 208:	87 95       	ror	r24
 20a:	08 95       	ret

0000020c <__fixsfsi>:
 20c:	0e 94 0d 01 	call	0x21a	; 0x21a <__fixunssfsi>
 210:	68 94       	set
 212:	b1 11       	cpse	r27, r1
 214:	0c 94 c4 01 	jmp	0x388	; 0x388 <__fp_szero>
 218:	08 95       	ret

0000021a <__fixunssfsi>:
 21a:	0e 94 a9 01 	call	0x352	; 0x352 <__fp_splitA>
 21e:	88 f0       	brcs	.+34     	; 0x242 <__fixunssfsi+0x28>
 220:	9f 57       	subi	r25, 0x7F	; 127
 222:	98 f0       	brcs	.+38     	; 0x24a <__fixunssfsi+0x30>
 224:	b9 2f       	mov	r27, r25
 226:	99 27       	eor	r25, r25
 228:	b7 51       	subi	r27, 0x17	; 23
 22a:	b0 f0       	brcs	.+44     	; 0x258 <__fixunssfsi+0x3e>
 22c:	e1 f0       	breq	.+56     	; 0x266 <__fixunssfsi+0x4c>
 22e:	66 0f       	add	r22, r22
 230:	77 1f       	adc	r23, r23
 232:	88 1f       	adc	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	1a f0       	brmi	.+6      	; 0x23e <__fixunssfsi+0x24>
 238:	ba 95       	dec	r27
 23a:	c9 f7       	brne	.-14     	; 0x22e <__fixunssfsi+0x14>
 23c:	14 c0       	rjmp	.+40     	; 0x266 <__fixunssfsi+0x4c>
 23e:	b1 30       	cpi	r27, 0x01	; 1
 240:	91 f0       	breq	.+36     	; 0x266 <__fixunssfsi+0x4c>
 242:	0e 94 c3 01 	call	0x386	; 0x386 <__fp_zero>
 246:	b1 e0       	ldi	r27, 0x01	; 1
 248:	08 95       	ret
 24a:	0c 94 c3 01 	jmp	0x386	; 0x386 <__fp_zero>
 24e:	67 2f       	mov	r22, r23
 250:	78 2f       	mov	r23, r24
 252:	88 27       	eor	r24, r24
 254:	b8 5f       	subi	r27, 0xF8	; 248
 256:	39 f0       	breq	.+14     	; 0x266 <__fixunssfsi+0x4c>
 258:	b9 3f       	cpi	r27, 0xF9	; 249
 25a:	cc f3       	brlt	.-14     	; 0x24e <__fixunssfsi+0x34>
 25c:	86 95       	lsr	r24
 25e:	77 95       	ror	r23
 260:	67 95       	ror	r22
 262:	b3 95       	inc	r27
 264:	d9 f7       	brne	.-10     	; 0x25c <__fixunssfsi+0x42>
 266:	3e f4       	brtc	.+14     	; 0x276 <__fixunssfsi+0x5c>
 268:	90 95       	com	r25
 26a:	80 95       	com	r24
 26c:	70 95       	com	r23
 26e:	61 95       	neg	r22
 270:	7f 4f       	sbci	r23, 0xFF	; 255
 272:	8f 4f       	sbci	r24, 0xFF	; 255
 274:	9f 4f       	sbci	r25, 0xFF	; 255
 276:	08 95       	ret

00000278 <__floatunsisf>:
 278:	e8 94       	clt
 27a:	09 c0       	rjmp	.+18     	; 0x28e <__floatsisf+0x12>

0000027c <__floatsisf>:
 27c:	97 fb       	bst	r25, 7
 27e:	3e f4       	brtc	.+14     	; 0x28e <__floatsisf+0x12>
 280:	90 95       	com	r25
 282:	80 95       	com	r24
 284:	70 95       	com	r23
 286:	61 95       	neg	r22
 288:	7f 4f       	sbci	r23, 0xFF	; 255
 28a:	8f 4f       	sbci	r24, 0xFF	; 255
 28c:	9f 4f       	sbci	r25, 0xFF	; 255
 28e:	99 23       	and	r25, r25
 290:	a9 f0       	breq	.+42     	; 0x2bc <__floatsisf+0x40>
 292:	f9 2f       	mov	r31, r25
 294:	96 e9       	ldi	r25, 0x96	; 150
 296:	bb 27       	eor	r27, r27
 298:	93 95       	inc	r25
 29a:	f6 95       	lsr	r31
 29c:	87 95       	ror	r24
 29e:	77 95       	ror	r23
 2a0:	67 95       	ror	r22
 2a2:	b7 95       	ror	r27
 2a4:	f1 11       	cpse	r31, r1
 2a6:	f8 cf       	rjmp	.-16     	; 0x298 <__floatsisf+0x1c>
 2a8:	fa f4       	brpl	.+62     	; 0x2e8 <__floatsisf+0x6c>
 2aa:	bb 0f       	add	r27, r27
 2ac:	11 f4       	brne	.+4      	; 0x2b2 <__floatsisf+0x36>
 2ae:	60 ff       	sbrs	r22, 0
 2b0:	1b c0       	rjmp	.+54     	; 0x2e8 <__floatsisf+0x6c>
 2b2:	6f 5f       	subi	r22, 0xFF	; 255
 2b4:	7f 4f       	sbci	r23, 0xFF	; 255
 2b6:	8f 4f       	sbci	r24, 0xFF	; 255
 2b8:	9f 4f       	sbci	r25, 0xFF	; 255
 2ba:	16 c0       	rjmp	.+44     	; 0x2e8 <__floatsisf+0x6c>
 2bc:	88 23       	and	r24, r24
 2be:	11 f0       	breq	.+4      	; 0x2c4 <__floatsisf+0x48>
 2c0:	96 e9       	ldi	r25, 0x96	; 150
 2c2:	11 c0       	rjmp	.+34     	; 0x2e6 <__floatsisf+0x6a>
 2c4:	77 23       	and	r23, r23
 2c6:	21 f0       	breq	.+8      	; 0x2d0 <__floatsisf+0x54>
 2c8:	9e e8       	ldi	r25, 0x8E	; 142
 2ca:	87 2f       	mov	r24, r23
 2cc:	76 2f       	mov	r23, r22
 2ce:	05 c0       	rjmp	.+10     	; 0x2da <__floatsisf+0x5e>
 2d0:	66 23       	and	r22, r22
 2d2:	71 f0       	breq	.+28     	; 0x2f0 <__floatsisf+0x74>
 2d4:	96 e8       	ldi	r25, 0x86	; 134
 2d6:	86 2f       	mov	r24, r22
 2d8:	70 e0       	ldi	r23, 0x00	; 0
 2da:	60 e0       	ldi	r22, 0x00	; 0
 2dc:	2a f0       	brmi	.+10     	; 0x2e8 <__floatsisf+0x6c>
 2de:	9a 95       	dec	r25
 2e0:	66 0f       	add	r22, r22
 2e2:	77 1f       	adc	r23, r23
 2e4:	88 1f       	adc	r24, r24
 2e6:	da f7       	brpl	.-10     	; 0x2de <__floatsisf+0x62>
 2e8:	88 0f       	add	r24, r24
 2ea:	96 95       	lsr	r25
 2ec:	87 95       	ror	r24
 2ee:	97 f9       	bld	r25, 7
 2f0:	08 95       	ret

000002f2 <__fp_inf>:
 2f2:	97 f9       	bld	r25, 7
 2f4:	9f 67       	ori	r25, 0x7F	; 127
 2f6:	80 e8       	ldi	r24, 0x80	; 128
 2f8:	70 e0       	ldi	r23, 0x00	; 0
 2fa:	60 e0       	ldi	r22, 0x00	; 0
 2fc:	08 95       	ret

000002fe <__fp_nan>:
 2fe:	9f ef       	ldi	r25, 0xFF	; 255
 300:	80 ec       	ldi	r24, 0xC0	; 192
 302:	08 95       	ret

00000304 <__fp_pscA>:
 304:	00 24       	eor	r0, r0
 306:	0a 94       	dec	r0
 308:	16 16       	cp	r1, r22
 30a:	17 06       	cpc	r1, r23
 30c:	18 06       	cpc	r1, r24
 30e:	09 06       	cpc	r0, r25
 310:	08 95       	ret

00000312 <__fp_pscB>:
 312:	00 24       	eor	r0, r0
 314:	0a 94       	dec	r0
 316:	12 16       	cp	r1, r18
 318:	13 06       	cpc	r1, r19
 31a:	14 06       	cpc	r1, r20
 31c:	05 06       	cpc	r0, r21
 31e:	08 95       	ret

00000320 <__fp_round>:
 320:	09 2e       	mov	r0, r25
 322:	03 94       	inc	r0
 324:	00 0c       	add	r0, r0
 326:	11 f4       	brne	.+4      	; 0x32c <__fp_round+0xc>
 328:	88 23       	and	r24, r24
 32a:	52 f0       	brmi	.+20     	; 0x340 <__fp_round+0x20>
 32c:	bb 0f       	add	r27, r27
 32e:	40 f4       	brcc	.+16     	; 0x340 <__fp_round+0x20>
 330:	bf 2b       	or	r27, r31
 332:	11 f4       	brne	.+4      	; 0x338 <__fp_round+0x18>
 334:	60 ff       	sbrs	r22, 0
 336:	04 c0       	rjmp	.+8      	; 0x340 <__fp_round+0x20>
 338:	6f 5f       	subi	r22, 0xFF	; 255
 33a:	7f 4f       	sbci	r23, 0xFF	; 255
 33c:	8f 4f       	sbci	r24, 0xFF	; 255
 33e:	9f 4f       	sbci	r25, 0xFF	; 255
 340:	08 95       	ret

00000342 <__fp_split3>:
 342:	57 fd       	sbrc	r21, 7
 344:	90 58       	subi	r25, 0x80	; 128
 346:	44 0f       	add	r20, r20
 348:	55 1f       	adc	r21, r21
 34a:	59 f0       	breq	.+22     	; 0x362 <__fp_splitA+0x10>
 34c:	5f 3f       	cpi	r21, 0xFF	; 255
 34e:	71 f0       	breq	.+28     	; 0x36c <__fp_splitA+0x1a>
 350:	47 95       	ror	r20

00000352 <__fp_splitA>:
 352:	88 0f       	add	r24, r24
 354:	97 fb       	bst	r25, 7
 356:	99 1f       	adc	r25, r25
 358:	61 f0       	breq	.+24     	; 0x372 <__fp_splitA+0x20>
 35a:	9f 3f       	cpi	r25, 0xFF	; 255
 35c:	79 f0       	breq	.+30     	; 0x37c <__fp_splitA+0x2a>
 35e:	87 95       	ror	r24
 360:	08 95       	ret
 362:	12 16       	cp	r1, r18
 364:	13 06       	cpc	r1, r19
 366:	14 06       	cpc	r1, r20
 368:	55 1f       	adc	r21, r21
 36a:	f2 cf       	rjmp	.-28     	; 0x350 <__fp_split3+0xe>
 36c:	46 95       	lsr	r20
 36e:	f1 df       	rcall	.-30     	; 0x352 <__fp_splitA>
 370:	08 c0       	rjmp	.+16     	; 0x382 <__fp_splitA+0x30>
 372:	16 16       	cp	r1, r22
 374:	17 06       	cpc	r1, r23
 376:	18 06       	cpc	r1, r24
 378:	99 1f       	adc	r25, r25
 37a:	f1 cf       	rjmp	.-30     	; 0x35e <__fp_splitA+0xc>
 37c:	86 95       	lsr	r24
 37e:	71 05       	cpc	r23, r1
 380:	61 05       	cpc	r22, r1
 382:	08 94       	sec
 384:	08 95       	ret

00000386 <__fp_zero>:
 386:	e8 94       	clt

00000388 <__fp_szero>:
 388:	bb 27       	eor	r27, r27
 38a:	66 27       	eor	r22, r22
 38c:	77 27       	eor	r23, r23
 38e:	cb 01       	movw	r24, r22
 390:	97 f9       	bld	r25, 7
 392:	08 95       	ret

00000394 <__mulsf3>:
 394:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__mulsf3x>
 398:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_round>
 39c:	0e 94 82 01 	call	0x304	; 0x304 <__fp_pscA>
 3a0:	38 f0       	brcs	.+14     	; 0x3b0 <__mulsf3+0x1c>
 3a2:	0e 94 89 01 	call	0x312	; 0x312 <__fp_pscB>
 3a6:	20 f0       	brcs	.+8      	; 0x3b0 <__mulsf3+0x1c>
 3a8:	95 23       	and	r25, r21
 3aa:	11 f0       	breq	.+4      	; 0x3b0 <__mulsf3+0x1c>
 3ac:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <__fp_inf>
 3b0:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <__fp_nan>
 3b4:	11 24       	eor	r1, r1
 3b6:	0c 94 c4 01 	jmp	0x388	; 0x388 <__fp_szero>

000003ba <__mulsf3x>:
 3ba:	0e 94 a1 01 	call	0x342	; 0x342 <__fp_split3>
 3be:	70 f3       	brcs	.-36     	; 0x39c <__mulsf3+0x8>

000003c0 <__mulsf3_pse>:
 3c0:	95 9f       	mul	r25, r21
 3c2:	c1 f3       	breq	.-16     	; 0x3b4 <__mulsf3+0x20>
 3c4:	95 0f       	add	r25, r21
 3c6:	50 e0       	ldi	r21, 0x00	; 0
 3c8:	55 1f       	adc	r21, r21
 3ca:	62 9f       	mul	r22, r18
 3cc:	f0 01       	movw	r30, r0
 3ce:	72 9f       	mul	r23, r18
 3d0:	bb 27       	eor	r27, r27
 3d2:	f0 0d       	add	r31, r0
 3d4:	b1 1d       	adc	r27, r1
 3d6:	63 9f       	mul	r22, r19
 3d8:	aa 27       	eor	r26, r26
 3da:	f0 0d       	add	r31, r0
 3dc:	b1 1d       	adc	r27, r1
 3de:	aa 1f       	adc	r26, r26
 3e0:	64 9f       	mul	r22, r20
 3e2:	66 27       	eor	r22, r22
 3e4:	b0 0d       	add	r27, r0
 3e6:	a1 1d       	adc	r26, r1
 3e8:	66 1f       	adc	r22, r22
 3ea:	82 9f       	mul	r24, r18
 3ec:	22 27       	eor	r18, r18
 3ee:	b0 0d       	add	r27, r0
 3f0:	a1 1d       	adc	r26, r1
 3f2:	62 1f       	adc	r22, r18
 3f4:	73 9f       	mul	r23, r19
 3f6:	b0 0d       	add	r27, r0
 3f8:	a1 1d       	adc	r26, r1
 3fa:	62 1f       	adc	r22, r18
 3fc:	83 9f       	mul	r24, r19
 3fe:	a0 0d       	add	r26, r0
 400:	61 1d       	adc	r22, r1
 402:	22 1f       	adc	r18, r18
 404:	74 9f       	mul	r23, r20
 406:	33 27       	eor	r19, r19
 408:	a0 0d       	add	r26, r0
 40a:	61 1d       	adc	r22, r1
 40c:	23 1f       	adc	r18, r19
 40e:	84 9f       	mul	r24, r20
 410:	60 0d       	add	r22, r0
 412:	21 1d       	adc	r18, r1
 414:	82 2f       	mov	r24, r18
 416:	76 2f       	mov	r23, r22
 418:	6a 2f       	mov	r22, r26
 41a:	11 24       	eor	r1, r1
 41c:	9f 57       	subi	r25, 0x7F	; 127
 41e:	50 40       	sbci	r21, 0x00	; 0
 420:	9a f0       	brmi	.+38     	; 0x448 <__mulsf3_pse+0x88>
 422:	f1 f0       	breq	.+60     	; 0x460 <__mulsf3_pse+0xa0>
 424:	88 23       	and	r24, r24
 426:	4a f0       	brmi	.+18     	; 0x43a <__mulsf3_pse+0x7a>
 428:	ee 0f       	add	r30, r30
 42a:	ff 1f       	adc	r31, r31
 42c:	bb 1f       	adc	r27, r27
 42e:	66 1f       	adc	r22, r22
 430:	77 1f       	adc	r23, r23
 432:	88 1f       	adc	r24, r24
 434:	91 50       	subi	r25, 0x01	; 1
 436:	50 40       	sbci	r21, 0x00	; 0
 438:	a9 f7       	brne	.-22     	; 0x424 <__mulsf3_pse+0x64>
 43a:	9e 3f       	cpi	r25, 0xFE	; 254
 43c:	51 05       	cpc	r21, r1
 43e:	80 f0       	brcs	.+32     	; 0x460 <__mulsf3_pse+0xa0>
 440:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <__fp_inf>
 444:	0c 94 c4 01 	jmp	0x388	; 0x388 <__fp_szero>
 448:	5f 3f       	cpi	r21, 0xFF	; 255
 44a:	e4 f3       	brlt	.-8      	; 0x444 <__mulsf3_pse+0x84>
 44c:	98 3e       	cpi	r25, 0xE8	; 232
 44e:	d4 f3       	brlt	.-12     	; 0x444 <__mulsf3_pse+0x84>
 450:	86 95       	lsr	r24
 452:	77 95       	ror	r23
 454:	67 95       	ror	r22
 456:	b7 95       	ror	r27
 458:	f7 95       	ror	r31
 45a:	e7 95       	ror	r30
 45c:	9f 5f       	subi	r25, 0xFF	; 255
 45e:	c1 f7       	brne	.-16     	; 0x450 <__mulsf3_pse+0x90>
 460:	fe 2b       	or	r31, r30
 462:	88 0f       	add	r24, r24
 464:	91 1d       	adc	r25, r1
 466:	96 95       	lsr	r25
 468:	87 95       	ror	r24
 46a:	97 f9       	bld	r25, 7
 46c:	08 95       	ret

0000046e <_exit>:
 46e:	f8 94       	cli

00000470 <__stop_program>:
 470:	ff cf       	rjmp	.-2      	; 0x470 <__stop_program>
