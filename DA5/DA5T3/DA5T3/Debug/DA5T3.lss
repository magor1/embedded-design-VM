
DA5T3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000476  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004ca  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000053c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000000b7  00000000  00000000  0000055c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000060  00000000  00000000  00000613  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000b4  00000000  00000000  00000673  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000728  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000159  00000000  00000000  0000074c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000007e  00000000  00000000  000008a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00000923  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 39 02 	jmp	0x472	; 0x472 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
int main()
{
	uint8_t trimpot_val;	//8-bit int type for potentiometer values
	float servoPosition; //holds value to determine servo position
	
	DDRB |= (1<<PB1); //PWM pin (OC1A)
  80:	21 9a       	sbi	0x04, 1	; 4
	DDRC |= (0<<PC0); //potentiometer analog input
  82:	87 b1       	in	r24, 0x07	; 7
  84:	87 b9       	out	0x07, r24	; 7
	
	//configure timer1
	TCCR1A |= (1<<COM1A1); //COM1A1=1 and COM1A0=0 (Non-inverted mode) (HIGH at bottom, LOW on match)
  86:	e0 e8       	ldi	r30, 0x80	; 128
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	80 68       	ori	r24, 0x80	; 128
  8e:	80 83       	st	Z, r24
	
	TCCR1A |= (1<<WGM11) | (0<<WGM10);	//WGM13=1, WGM12=1, WGM11=1, WGM10=0
  90:	80 81       	ld	r24, Z
  92:	82 60       	ori	r24, 0x02	; 2
  94:	80 83       	st	Z, r24
	TCCR1B |= (1<<WGM13) | (1<<WGM12); //1 1 1 0 => fast PWM using ICR1 (mode 14)
  96:	e1 e8       	ldi	r30, 0x81	; 129
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	80 81       	ld	r24, Z
  9c:	88 61       	ori	r24, 0x18	; 24
  9e:	80 83       	st	Z, r24
	//FAST PWM is more suited for servo
	
	TCCR1B |= (0<<CS12) | (1<<CS11) | (1<<CS10); //0 1 1 => prescaler 64
  a0:	80 81       	ld	r24, Z
  a2:	83 60       	ori	r24, 0x03	; 3
  a4:	80 83       	st	Z, r24
	
	//we want T1 to repeat with a period of 20ms or 50Hz.
	ICR1 = ((double)F_CPU) / (preScaler * 50); //value of ICR1 = [(F_CPU)/(prescaler * 50Hz)]
  a6:	88 e8       	ldi	r24, 0x88	; 136
  a8:	93 e1       	ldi	r25, 0x13	; 19
  aa:	90 93 87 00 	sts	0x0087, r25
  ae:	80 93 86 00 	sts	0x0086, r24
	
	//configure ADC
	ADCSRA |= (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);	//ADCSRA=0b10000111 => division factor 128
  b2:	ea e7       	ldi	r30, 0x7A	; 122
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	87 68       	ori	r24, 0x87	; 135
  ba:	80 83       	st	Z, r24
	
	ADMUX |= (0<<REFS1) | (1<<REFS0) | (1<<ADLAR);	//VRef = AVCC with external capacitor at AREF pin.
  bc:	ec e7       	ldi	r30, 0x7C	; 124
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	80 66       	ori	r24, 0x60	; 96
  c4:	80 83       	st	Z, r24
	// ADLAR high, ADCH = 0b00000000 and ADCL = 0b00xxxxxx
	// https://sites.google.com/site/qeewiki/books/avr-guide/analog-input
	
	while(1)
	{
		ADCSRA |= (1<<ADSC); //ADC conversion of potentiometer value to servo position
  c6:	ca e7       	ldi	r28, 0x7A	; 122
  c8:	d0 e0       	ldi	r29, 0x00	; 0
		
		while((ADCSRA &(1<<ADIF)) == 0); //loop until ADC done
		
		trimpot_val = ADCH << 1;			//store high byte of ADC
  ca:	0f 2e       	mov	r0, r31
  cc:	f9 e7       	ldi	r31, 0x79	; 121
  ce:	ef 2e       	mov	r14, r31
  d0:	f1 2c       	mov	r15, r1
  d2:	f0 2d       	mov	r31, r0
		
		//OCR1A = 150 => 0 degrees (min)
		//OCR1A = 535 => 180 degrees (max)
		servoPosition =  (servoPosition * 385) + 150; //equation to determine position. Min = 150, Max = 535
		
		OCR1A = (int)servoPosition; //update servo position
  d4:	08 e8       	ldi	r16, 0x88	; 136
  d6:	10 e0       	ldi	r17, 0x00	; 0
	// ADLAR high, ADCH = 0b00000000 and ADCL = 0b00xxxxxx
	// https://sites.google.com/site/qeewiki/books/avr-guide/analog-input
	
	while(1)
	{
		ADCSRA |= (1<<ADSC); //ADC conversion of potentiometer value to servo position
  d8:	88 81       	ld	r24, Y
  da:	80 64       	ori	r24, 0x40	; 64
  dc:	88 83       	st	Y, r24
		
		while((ADCSRA &(1<<ADIF)) == 0); //loop until ADC done
  de:	88 81       	ld	r24, Y
  e0:	84 ff       	sbrs	r24, 4
  e2:	fd cf       	rjmp	.-6      	; 0xde <main+0x5e>
		
		trimpot_val = ADCH << 1;			//store high byte of ADC
  e4:	f7 01       	movw	r30, r14
  e6:	80 81       	ld	r24, Z
  e8:	88 0f       	add	r24, r24
		servoPosition = trimpot_val * 5 / 1024.0;	//scale the potentiometer value
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	bc 01       	movw	r22, r24
  ee:	66 0f       	add	r22, r22
  f0:	77 1f       	adc	r23, r23
  f2:	66 0f       	add	r22, r22
  f4:	77 1f       	adc	r23, r23
  f6:	68 0f       	add	r22, r24
  f8:	79 1f       	adc	r23, r25
  fa:	07 2e       	mov	r0, r23
  fc:	00 0c       	add	r0, r0
  fe:	88 0b       	sbc	r24, r24
 100:	99 0b       	sbc	r25, r25
 102:	0e 94 40 01 	call	0x280	; 0x280 <__floatsisf>
 106:	20 e0       	ldi	r18, 0x00	; 0
 108:	30 e0       	ldi	r19, 0x00	; 0
 10a:	40 e8       	ldi	r20, 0x80	; 128
 10c:	5a e3       	ldi	r21, 0x3A	; 58
 10e:	0e 94 cc 01 	call	0x398	; 0x398 <__mulsf3>
		
		//OCR1A = 150 => 0 degrees (min)
		//OCR1A = 535 => 180 degrees (max)
		servoPosition =  (servoPosition * 385) + 150; //equation to determine position. Min = 150, Max = 535
 112:	20 e0       	ldi	r18, 0x00	; 0
 114:	30 e8       	ldi	r19, 0x80	; 128
 116:	40 ec       	ldi	r20, 0xC0	; 192
 118:	53 e4       	ldi	r21, 0x43	; 67
 11a:	0e 94 cc 01 	call	0x398	; 0x398 <__mulsf3>
 11e:	20 e0       	ldi	r18, 0x00	; 0
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	46 e1       	ldi	r20, 0x16	; 22
 124:	53 e4       	ldi	r21, 0x43	; 67
 126:	0e 94 9c 00 	call	0x138	; 0x138 <__addsf3>
		
		OCR1A = (int)servoPosition; //update servo position
 12a:	0e 94 08 01 	call	0x210	; 0x210 <__fixsfsi>
 12e:	f8 01       	movw	r30, r16
 130:	71 83       	std	Z+1, r23	; 0x01
 132:	60 83       	st	Z, r22
	}
 134:	d1 cf       	rjmp	.-94     	; 0xd8 <main+0x58>

00000136 <__subsf3>:
 136:	50 58       	subi	r21, 0x80	; 128

00000138 <__addsf3>:
 138:	bb 27       	eor	r27, r27
 13a:	aa 27       	eor	r26, r26
 13c:	0e 94 b3 00 	call	0x166	; 0x166 <__addsf3x>
 140:	0c 94 92 01 	jmp	0x324	; 0x324 <__fp_round>
 144:	0e 94 84 01 	call	0x308	; 0x308 <__fp_pscA>
 148:	38 f0       	brcs	.+14     	; 0x158 <__addsf3+0x20>
 14a:	0e 94 8b 01 	call	0x316	; 0x316 <__fp_pscB>
 14e:	20 f0       	brcs	.+8      	; 0x158 <__addsf3+0x20>
 150:	39 f4       	brne	.+14     	; 0x160 <__addsf3+0x28>
 152:	9f 3f       	cpi	r25, 0xFF	; 255
 154:	19 f4       	brne	.+6      	; 0x15c <__addsf3+0x24>
 156:	26 f4       	brtc	.+8      	; 0x160 <__addsf3+0x28>
 158:	0c 94 81 01 	jmp	0x302	; 0x302 <__fp_nan>
 15c:	0e f4       	brtc	.+2      	; 0x160 <__addsf3+0x28>
 15e:	e0 95       	com	r30
 160:	e7 fb       	bst	r30, 7
 162:	0c 94 7b 01 	jmp	0x2f6	; 0x2f6 <__fp_inf>

00000166 <__addsf3x>:
 166:	e9 2f       	mov	r30, r25
 168:	0e 94 a3 01 	call	0x346	; 0x346 <__fp_split3>
 16c:	58 f3       	brcs	.-42     	; 0x144 <__addsf3+0xc>
 16e:	ba 17       	cp	r27, r26
 170:	62 07       	cpc	r22, r18
 172:	73 07       	cpc	r23, r19
 174:	84 07       	cpc	r24, r20
 176:	95 07       	cpc	r25, r21
 178:	20 f0       	brcs	.+8      	; 0x182 <__addsf3x+0x1c>
 17a:	79 f4       	brne	.+30     	; 0x19a <__addsf3x+0x34>
 17c:	a6 f5       	brtc	.+104    	; 0x1e6 <__addsf3x+0x80>
 17e:	0c 94 c5 01 	jmp	0x38a	; 0x38a <__fp_zero>
 182:	0e f4       	brtc	.+2      	; 0x186 <__addsf3x+0x20>
 184:	e0 95       	com	r30
 186:	0b 2e       	mov	r0, r27
 188:	ba 2f       	mov	r27, r26
 18a:	a0 2d       	mov	r26, r0
 18c:	0b 01       	movw	r0, r22
 18e:	b9 01       	movw	r22, r18
 190:	90 01       	movw	r18, r0
 192:	0c 01       	movw	r0, r24
 194:	ca 01       	movw	r24, r20
 196:	a0 01       	movw	r20, r0
 198:	11 24       	eor	r1, r1
 19a:	ff 27       	eor	r31, r31
 19c:	59 1b       	sub	r21, r25
 19e:	99 f0       	breq	.+38     	; 0x1c6 <__addsf3x+0x60>
 1a0:	59 3f       	cpi	r21, 0xF9	; 249
 1a2:	50 f4       	brcc	.+20     	; 0x1b8 <__addsf3x+0x52>
 1a4:	50 3e       	cpi	r21, 0xE0	; 224
 1a6:	68 f1       	brcs	.+90     	; 0x202 <__addsf3x+0x9c>
 1a8:	1a 16       	cp	r1, r26
 1aa:	f0 40       	sbci	r31, 0x00	; 0
 1ac:	a2 2f       	mov	r26, r18
 1ae:	23 2f       	mov	r18, r19
 1b0:	34 2f       	mov	r19, r20
 1b2:	44 27       	eor	r20, r20
 1b4:	58 5f       	subi	r21, 0xF8	; 248
 1b6:	f3 cf       	rjmp	.-26     	; 0x19e <__addsf3x+0x38>
 1b8:	46 95       	lsr	r20
 1ba:	37 95       	ror	r19
 1bc:	27 95       	ror	r18
 1be:	a7 95       	ror	r26
 1c0:	f0 40       	sbci	r31, 0x00	; 0
 1c2:	53 95       	inc	r21
 1c4:	c9 f7       	brne	.-14     	; 0x1b8 <__addsf3x+0x52>
 1c6:	7e f4       	brtc	.+30     	; 0x1e6 <__addsf3x+0x80>
 1c8:	1f 16       	cp	r1, r31
 1ca:	ba 0b       	sbc	r27, r26
 1cc:	62 0b       	sbc	r22, r18
 1ce:	73 0b       	sbc	r23, r19
 1d0:	84 0b       	sbc	r24, r20
 1d2:	ba f0       	brmi	.+46     	; 0x202 <__addsf3x+0x9c>
 1d4:	91 50       	subi	r25, 0x01	; 1
 1d6:	a1 f0       	breq	.+40     	; 0x200 <__addsf3x+0x9a>
 1d8:	ff 0f       	add	r31, r31
 1da:	bb 1f       	adc	r27, r27
 1dc:	66 1f       	adc	r22, r22
 1de:	77 1f       	adc	r23, r23
 1e0:	88 1f       	adc	r24, r24
 1e2:	c2 f7       	brpl	.-16     	; 0x1d4 <__addsf3x+0x6e>
 1e4:	0e c0       	rjmp	.+28     	; 0x202 <__addsf3x+0x9c>
 1e6:	ba 0f       	add	r27, r26
 1e8:	62 1f       	adc	r22, r18
 1ea:	73 1f       	adc	r23, r19
 1ec:	84 1f       	adc	r24, r20
 1ee:	48 f4       	brcc	.+18     	; 0x202 <__addsf3x+0x9c>
 1f0:	87 95       	ror	r24
 1f2:	77 95       	ror	r23
 1f4:	67 95       	ror	r22
 1f6:	b7 95       	ror	r27
 1f8:	f7 95       	ror	r31
 1fa:	9e 3f       	cpi	r25, 0xFE	; 254
 1fc:	08 f0       	brcs	.+2      	; 0x200 <__addsf3x+0x9a>
 1fe:	b0 cf       	rjmp	.-160    	; 0x160 <__addsf3+0x28>
 200:	93 95       	inc	r25
 202:	88 0f       	add	r24, r24
 204:	08 f0       	brcs	.+2      	; 0x208 <__addsf3x+0xa2>
 206:	99 27       	eor	r25, r25
 208:	ee 0f       	add	r30, r30
 20a:	97 95       	ror	r25
 20c:	87 95       	ror	r24
 20e:	08 95       	ret

00000210 <__fixsfsi>:
 210:	0e 94 0f 01 	call	0x21e	; 0x21e <__fixunssfsi>
 214:	68 94       	set
 216:	b1 11       	cpse	r27, r1
 218:	0c 94 c6 01 	jmp	0x38c	; 0x38c <__fp_szero>
 21c:	08 95       	ret

0000021e <__fixunssfsi>:
 21e:	0e 94 ab 01 	call	0x356	; 0x356 <__fp_splitA>
 222:	88 f0       	brcs	.+34     	; 0x246 <__fixunssfsi+0x28>
 224:	9f 57       	subi	r25, 0x7F	; 127
 226:	98 f0       	brcs	.+38     	; 0x24e <__fixunssfsi+0x30>
 228:	b9 2f       	mov	r27, r25
 22a:	99 27       	eor	r25, r25
 22c:	b7 51       	subi	r27, 0x17	; 23
 22e:	b0 f0       	brcs	.+44     	; 0x25c <__fixunssfsi+0x3e>
 230:	e1 f0       	breq	.+56     	; 0x26a <__fixunssfsi+0x4c>
 232:	66 0f       	add	r22, r22
 234:	77 1f       	adc	r23, r23
 236:	88 1f       	adc	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	1a f0       	brmi	.+6      	; 0x242 <__fixunssfsi+0x24>
 23c:	ba 95       	dec	r27
 23e:	c9 f7       	brne	.-14     	; 0x232 <__fixunssfsi+0x14>
 240:	14 c0       	rjmp	.+40     	; 0x26a <__fixunssfsi+0x4c>
 242:	b1 30       	cpi	r27, 0x01	; 1
 244:	91 f0       	breq	.+36     	; 0x26a <__fixunssfsi+0x4c>
 246:	0e 94 c5 01 	call	0x38a	; 0x38a <__fp_zero>
 24a:	b1 e0       	ldi	r27, 0x01	; 1
 24c:	08 95       	ret
 24e:	0c 94 c5 01 	jmp	0x38a	; 0x38a <__fp_zero>
 252:	67 2f       	mov	r22, r23
 254:	78 2f       	mov	r23, r24
 256:	88 27       	eor	r24, r24
 258:	b8 5f       	subi	r27, 0xF8	; 248
 25a:	39 f0       	breq	.+14     	; 0x26a <__fixunssfsi+0x4c>
 25c:	b9 3f       	cpi	r27, 0xF9	; 249
 25e:	cc f3       	brlt	.-14     	; 0x252 <__fixunssfsi+0x34>
 260:	86 95       	lsr	r24
 262:	77 95       	ror	r23
 264:	67 95       	ror	r22
 266:	b3 95       	inc	r27
 268:	d9 f7       	brne	.-10     	; 0x260 <__fixunssfsi+0x42>
 26a:	3e f4       	brtc	.+14     	; 0x27a <__fixunssfsi+0x5c>
 26c:	90 95       	com	r25
 26e:	80 95       	com	r24
 270:	70 95       	com	r23
 272:	61 95       	neg	r22
 274:	7f 4f       	sbci	r23, 0xFF	; 255
 276:	8f 4f       	sbci	r24, 0xFF	; 255
 278:	9f 4f       	sbci	r25, 0xFF	; 255
 27a:	08 95       	ret

0000027c <__floatunsisf>:
 27c:	e8 94       	clt
 27e:	09 c0       	rjmp	.+18     	; 0x292 <__floatsisf+0x12>

00000280 <__floatsisf>:
 280:	97 fb       	bst	r25, 7
 282:	3e f4       	brtc	.+14     	; 0x292 <__floatsisf+0x12>
 284:	90 95       	com	r25
 286:	80 95       	com	r24
 288:	70 95       	com	r23
 28a:	61 95       	neg	r22
 28c:	7f 4f       	sbci	r23, 0xFF	; 255
 28e:	8f 4f       	sbci	r24, 0xFF	; 255
 290:	9f 4f       	sbci	r25, 0xFF	; 255
 292:	99 23       	and	r25, r25
 294:	a9 f0       	breq	.+42     	; 0x2c0 <__floatsisf+0x40>
 296:	f9 2f       	mov	r31, r25
 298:	96 e9       	ldi	r25, 0x96	; 150
 29a:	bb 27       	eor	r27, r27
 29c:	93 95       	inc	r25
 29e:	f6 95       	lsr	r31
 2a0:	87 95       	ror	r24
 2a2:	77 95       	ror	r23
 2a4:	67 95       	ror	r22
 2a6:	b7 95       	ror	r27
 2a8:	f1 11       	cpse	r31, r1
 2aa:	f8 cf       	rjmp	.-16     	; 0x29c <__floatsisf+0x1c>
 2ac:	fa f4       	brpl	.+62     	; 0x2ec <__floatsisf+0x6c>
 2ae:	bb 0f       	add	r27, r27
 2b0:	11 f4       	brne	.+4      	; 0x2b6 <__floatsisf+0x36>
 2b2:	60 ff       	sbrs	r22, 0
 2b4:	1b c0       	rjmp	.+54     	; 0x2ec <__floatsisf+0x6c>
 2b6:	6f 5f       	subi	r22, 0xFF	; 255
 2b8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ba:	8f 4f       	sbci	r24, 0xFF	; 255
 2bc:	9f 4f       	sbci	r25, 0xFF	; 255
 2be:	16 c0       	rjmp	.+44     	; 0x2ec <__floatsisf+0x6c>
 2c0:	88 23       	and	r24, r24
 2c2:	11 f0       	breq	.+4      	; 0x2c8 <__floatsisf+0x48>
 2c4:	96 e9       	ldi	r25, 0x96	; 150
 2c6:	11 c0       	rjmp	.+34     	; 0x2ea <__floatsisf+0x6a>
 2c8:	77 23       	and	r23, r23
 2ca:	21 f0       	breq	.+8      	; 0x2d4 <__floatsisf+0x54>
 2cc:	9e e8       	ldi	r25, 0x8E	; 142
 2ce:	87 2f       	mov	r24, r23
 2d0:	76 2f       	mov	r23, r22
 2d2:	05 c0       	rjmp	.+10     	; 0x2de <__floatsisf+0x5e>
 2d4:	66 23       	and	r22, r22
 2d6:	71 f0       	breq	.+28     	; 0x2f4 <__floatsisf+0x74>
 2d8:	96 e8       	ldi	r25, 0x86	; 134
 2da:	86 2f       	mov	r24, r22
 2dc:	70 e0       	ldi	r23, 0x00	; 0
 2de:	60 e0       	ldi	r22, 0x00	; 0
 2e0:	2a f0       	brmi	.+10     	; 0x2ec <__floatsisf+0x6c>
 2e2:	9a 95       	dec	r25
 2e4:	66 0f       	add	r22, r22
 2e6:	77 1f       	adc	r23, r23
 2e8:	88 1f       	adc	r24, r24
 2ea:	da f7       	brpl	.-10     	; 0x2e2 <__floatsisf+0x62>
 2ec:	88 0f       	add	r24, r24
 2ee:	96 95       	lsr	r25
 2f0:	87 95       	ror	r24
 2f2:	97 f9       	bld	r25, 7
 2f4:	08 95       	ret

000002f6 <__fp_inf>:
 2f6:	97 f9       	bld	r25, 7
 2f8:	9f 67       	ori	r25, 0x7F	; 127
 2fa:	80 e8       	ldi	r24, 0x80	; 128
 2fc:	70 e0       	ldi	r23, 0x00	; 0
 2fe:	60 e0       	ldi	r22, 0x00	; 0
 300:	08 95       	ret

00000302 <__fp_nan>:
 302:	9f ef       	ldi	r25, 0xFF	; 255
 304:	80 ec       	ldi	r24, 0xC0	; 192
 306:	08 95       	ret

00000308 <__fp_pscA>:
 308:	00 24       	eor	r0, r0
 30a:	0a 94       	dec	r0
 30c:	16 16       	cp	r1, r22
 30e:	17 06       	cpc	r1, r23
 310:	18 06       	cpc	r1, r24
 312:	09 06       	cpc	r0, r25
 314:	08 95       	ret

00000316 <__fp_pscB>:
 316:	00 24       	eor	r0, r0
 318:	0a 94       	dec	r0
 31a:	12 16       	cp	r1, r18
 31c:	13 06       	cpc	r1, r19
 31e:	14 06       	cpc	r1, r20
 320:	05 06       	cpc	r0, r21
 322:	08 95       	ret

00000324 <__fp_round>:
 324:	09 2e       	mov	r0, r25
 326:	03 94       	inc	r0
 328:	00 0c       	add	r0, r0
 32a:	11 f4       	brne	.+4      	; 0x330 <__fp_round+0xc>
 32c:	88 23       	and	r24, r24
 32e:	52 f0       	brmi	.+20     	; 0x344 <__fp_round+0x20>
 330:	bb 0f       	add	r27, r27
 332:	40 f4       	brcc	.+16     	; 0x344 <__fp_round+0x20>
 334:	bf 2b       	or	r27, r31
 336:	11 f4       	brne	.+4      	; 0x33c <__fp_round+0x18>
 338:	60 ff       	sbrs	r22, 0
 33a:	04 c0       	rjmp	.+8      	; 0x344 <__fp_round+0x20>
 33c:	6f 5f       	subi	r22, 0xFF	; 255
 33e:	7f 4f       	sbci	r23, 0xFF	; 255
 340:	8f 4f       	sbci	r24, 0xFF	; 255
 342:	9f 4f       	sbci	r25, 0xFF	; 255
 344:	08 95       	ret

00000346 <__fp_split3>:
 346:	57 fd       	sbrc	r21, 7
 348:	90 58       	subi	r25, 0x80	; 128
 34a:	44 0f       	add	r20, r20
 34c:	55 1f       	adc	r21, r21
 34e:	59 f0       	breq	.+22     	; 0x366 <__fp_splitA+0x10>
 350:	5f 3f       	cpi	r21, 0xFF	; 255
 352:	71 f0       	breq	.+28     	; 0x370 <__fp_splitA+0x1a>
 354:	47 95       	ror	r20

00000356 <__fp_splitA>:
 356:	88 0f       	add	r24, r24
 358:	97 fb       	bst	r25, 7
 35a:	99 1f       	adc	r25, r25
 35c:	61 f0       	breq	.+24     	; 0x376 <__fp_splitA+0x20>
 35e:	9f 3f       	cpi	r25, 0xFF	; 255
 360:	79 f0       	breq	.+30     	; 0x380 <__fp_splitA+0x2a>
 362:	87 95       	ror	r24
 364:	08 95       	ret
 366:	12 16       	cp	r1, r18
 368:	13 06       	cpc	r1, r19
 36a:	14 06       	cpc	r1, r20
 36c:	55 1f       	adc	r21, r21
 36e:	f2 cf       	rjmp	.-28     	; 0x354 <__fp_split3+0xe>
 370:	46 95       	lsr	r20
 372:	f1 df       	rcall	.-30     	; 0x356 <__fp_splitA>
 374:	08 c0       	rjmp	.+16     	; 0x386 <__fp_splitA+0x30>
 376:	16 16       	cp	r1, r22
 378:	17 06       	cpc	r1, r23
 37a:	18 06       	cpc	r1, r24
 37c:	99 1f       	adc	r25, r25
 37e:	f1 cf       	rjmp	.-30     	; 0x362 <__fp_splitA+0xc>
 380:	86 95       	lsr	r24
 382:	71 05       	cpc	r23, r1
 384:	61 05       	cpc	r22, r1
 386:	08 94       	sec
 388:	08 95       	ret

0000038a <__fp_zero>:
 38a:	e8 94       	clt

0000038c <__fp_szero>:
 38c:	bb 27       	eor	r27, r27
 38e:	66 27       	eor	r22, r22
 390:	77 27       	eor	r23, r23
 392:	cb 01       	movw	r24, r22
 394:	97 f9       	bld	r25, 7
 396:	08 95       	ret

00000398 <__mulsf3>:
 398:	0e 94 df 01 	call	0x3be	; 0x3be <__mulsf3x>
 39c:	0c 94 92 01 	jmp	0x324	; 0x324 <__fp_round>
 3a0:	0e 94 84 01 	call	0x308	; 0x308 <__fp_pscA>
 3a4:	38 f0       	brcs	.+14     	; 0x3b4 <__mulsf3+0x1c>
 3a6:	0e 94 8b 01 	call	0x316	; 0x316 <__fp_pscB>
 3aa:	20 f0       	brcs	.+8      	; 0x3b4 <__mulsf3+0x1c>
 3ac:	95 23       	and	r25, r21
 3ae:	11 f0       	breq	.+4      	; 0x3b4 <__mulsf3+0x1c>
 3b0:	0c 94 7b 01 	jmp	0x2f6	; 0x2f6 <__fp_inf>
 3b4:	0c 94 81 01 	jmp	0x302	; 0x302 <__fp_nan>
 3b8:	11 24       	eor	r1, r1
 3ba:	0c 94 c6 01 	jmp	0x38c	; 0x38c <__fp_szero>

000003be <__mulsf3x>:
 3be:	0e 94 a3 01 	call	0x346	; 0x346 <__fp_split3>
 3c2:	70 f3       	brcs	.-36     	; 0x3a0 <__mulsf3+0x8>

000003c4 <__mulsf3_pse>:
 3c4:	95 9f       	mul	r25, r21
 3c6:	c1 f3       	breq	.-16     	; 0x3b8 <__mulsf3+0x20>
 3c8:	95 0f       	add	r25, r21
 3ca:	50 e0       	ldi	r21, 0x00	; 0
 3cc:	55 1f       	adc	r21, r21
 3ce:	62 9f       	mul	r22, r18
 3d0:	f0 01       	movw	r30, r0
 3d2:	72 9f       	mul	r23, r18
 3d4:	bb 27       	eor	r27, r27
 3d6:	f0 0d       	add	r31, r0
 3d8:	b1 1d       	adc	r27, r1
 3da:	63 9f       	mul	r22, r19
 3dc:	aa 27       	eor	r26, r26
 3de:	f0 0d       	add	r31, r0
 3e0:	b1 1d       	adc	r27, r1
 3e2:	aa 1f       	adc	r26, r26
 3e4:	64 9f       	mul	r22, r20
 3e6:	66 27       	eor	r22, r22
 3e8:	b0 0d       	add	r27, r0
 3ea:	a1 1d       	adc	r26, r1
 3ec:	66 1f       	adc	r22, r22
 3ee:	82 9f       	mul	r24, r18
 3f0:	22 27       	eor	r18, r18
 3f2:	b0 0d       	add	r27, r0
 3f4:	a1 1d       	adc	r26, r1
 3f6:	62 1f       	adc	r22, r18
 3f8:	73 9f       	mul	r23, r19
 3fa:	b0 0d       	add	r27, r0
 3fc:	a1 1d       	adc	r26, r1
 3fe:	62 1f       	adc	r22, r18
 400:	83 9f       	mul	r24, r19
 402:	a0 0d       	add	r26, r0
 404:	61 1d       	adc	r22, r1
 406:	22 1f       	adc	r18, r18
 408:	74 9f       	mul	r23, r20
 40a:	33 27       	eor	r19, r19
 40c:	a0 0d       	add	r26, r0
 40e:	61 1d       	adc	r22, r1
 410:	23 1f       	adc	r18, r19
 412:	84 9f       	mul	r24, r20
 414:	60 0d       	add	r22, r0
 416:	21 1d       	adc	r18, r1
 418:	82 2f       	mov	r24, r18
 41a:	76 2f       	mov	r23, r22
 41c:	6a 2f       	mov	r22, r26
 41e:	11 24       	eor	r1, r1
 420:	9f 57       	subi	r25, 0x7F	; 127
 422:	50 40       	sbci	r21, 0x00	; 0
 424:	9a f0       	brmi	.+38     	; 0x44c <__mulsf3_pse+0x88>
 426:	f1 f0       	breq	.+60     	; 0x464 <__mulsf3_pse+0xa0>
 428:	88 23       	and	r24, r24
 42a:	4a f0       	brmi	.+18     	; 0x43e <__mulsf3_pse+0x7a>
 42c:	ee 0f       	add	r30, r30
 42e:	ff 1f       	adc	r31, r31
 430:	bb 1f       	adc	r27, r27
 432:	66 1f       	adc	r22, r22
 434:	77 1f       	adc	r23, r23
 436:	88 1f       	adc	r24, r24
 438:	91 50       	subi	r25, 0x01	; 1
 43a:	50 40       	sbci	r21, 0x00	; 0
 43c:	a9 f7       	brne	.-22     	; 0x428 <__mulsf3_pse+0x64>
 43e:	9e 3f       	cpi	r25, 0xFE	; 254
 440:	51 05       	cpc	r21, r1
 442:	80 f0       	brcs	.+32     	; 0x464 <__mulsf3_pse+0xa0>
 444:	0c 94 7b 01 	jmp	0x2f6	; 0x2f6 <__fp_inf>
 448:	0c 94 c6 01 	jmp	0x38c	; 0x38c <__fp_szero>
 44c:	5f 3f       	cpi	r21, 0xFF	; 255
 44e:	e4 f3       	brlt	.-8      	; 0x448 <__mulsf3_pse+0x84>
 450:	98 3e       	cpi	r25, 0xE8	; 232
 452:	d4 f3       	brlt	.-12     	; 0x448 <__mulsf3_pse+0x84>
 454:	86 95       	lsr	r24
 456:	77 95       	ror	r23
 458:	67 95       	ror	r22
 45a:	b7 95       	ror	r27
 45c:	f7 95       	ror	r31
 45e:	e7 95       	ror	r30
 460:	9f 5f       	subi	r25, 0xFF	; 255
 462:	c1 f7       	brne	.-16     	; 0x454 <__mulsf3_pse+0x90>
 464:	fe 2b       	or	r31, r30
 466:	88 0f       	add	r24, r24
 468:	91 1d       	adc	r25, r1
 46a:	96 95       	lsr	r25
 46c:	87 95       	ror	r24
 46e:	97 f9       	bld	r25, 7
 470:	08 95       	ret

00000472 <_exit>:
 472:	f8 94       	cli

00000474 <__stop_program>:
 474:	ff cf       	rjmp	.-2      	; 0x474 <__stop_program>
