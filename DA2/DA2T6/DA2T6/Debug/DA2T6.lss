
DA2T6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000690  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000061c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000690  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000690  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000700  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000130  00000000  00000000  00000730  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000e1  00000000  00000000  00000860  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000000f5  00000000  00000000  00000941  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000074  00000000  00000000  00000a38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000016b  00000000  00000000  00000aac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000010b  00000000  00000000  00000c17  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00000d22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 99 00 	jmp	0x132	; 0x132 <__vector_4>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 74 00 	call	0xe8	; 0xe8 <main>
  88:	0c 94 0c 03 	jmp	0x618	; 0x618 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <delay_msec>:
//////////////
//////////////

void delay_msec(int ms)
{
	double timerCalc = 65536 - (((double)ms)/1000)*((double)F_CPU/64);
  90:	bc 01       	movw	r22, r24
  92:	99 0f       	add	r25, r25
  94:	88 0b       	sbc	r24, r24
  96:	99 0b       	sbc	r25, r25
  98:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <__floatsisf>
  9c:	20 e0       	ldi	r18, 0x00	; 0
  9e:	30 e0       	ldi	r19, 0x00	; 0
  a0:	4a e7       	ldi	r20, 0x7A	; 122
  a2:	54 e4       	ldi	r21, 0x44	; 68
  a4:	0e 94 41 01 	call	0x282	; 0x282 <__divsf3>
  a8:	20 e0       	ldi	r18, 0x00	; 0
  aa:	34 e2       	ldi	r19, 0x24	; 36
  ac:	44 ef       	ldi	r20, 0xF4	; 244
  ae:	57 e4       	ldi	r21, 0x47	; 71
  b0:	0e 94 77 02 	call	0x4ee	; 0x4ee <__mulsf3>
  b4:	9b 01       	movw	r18, r22
  b6:	ac 01       	movw	r20, r24
  b8:	60 e0       	ldi	r22, 0x00	; 0
  ba:	70 e0       	ldi	r23, 0x00	; 0
  bc:	80 e8       	ldi	r24, 0x80	; 128
  be:	97 e4       	ldi	r25, 0x47	; 71
  c0:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <__subsf3>
	//set timer calculation = 2^16 - delay in sec / (clock period/ prescaler 64)

	TCNT1H = ((int)timerCalc) >> 0x08; //move upper byte of TCNT
  c4:	0e 94 b3 01 	call	0x366	; 0x366 <__fixsfsi>
  c8:	70 93 85 00 	sts	0x0085, r23
	TCNT1L = ((int)timerCalc) & 0x00FF; //move lower byte of TCNT
  cc:	60 93 84 00 	sts	0x0084, r22
	
	TCCR1A = 0; //Timer 1 Normal Mode
  d0:	10 92 80 00 	sts	0x0080, r1
	TCCR1B = 0x03; //Prescaler = 64 (we can easily change prescaler here for emulation)
  d4:	83 e0       	ldi	r24, 0x03	; 3
  d6:	80 93 81 00 	sts	0x0081, r24
	
	while(!(TIFR1 & (1<<TOV1))) {	//loop until overflow
  da:	b0 9b       	sbis	0x16, 0	; 22
  dc:	fe cf       	rjmp	.-4      	; 0xda <delay_msec+0x4a>
	}
	TCCR1B = 0; // stop timer 1
  de:	10 92 81 00 	sts	0x0081, r1
	TIFR1 = 1; // clear overflow flag
  e2:	81 e0       	ldi	r24, 0x01	; 1
  e4:	86 bb       	out	0x16, r24	; 22
  e6:	08 95       	ret

000000e8 <main>:
void delay_msec(int ms); //delay function procedure
						//calculation using clock freq. (here we are using 8MHz)

int main(void)
{
	DDRC |= 0x31;	// set PC4 an PC5 as outputs on PORTC
  e8:	87 b1       	in	r24, 0x07	; 7
  ea:	81 63       	ori	r24, 0x31	; 49
  ec:	87 b9       	out	0x07, r24	; 7
	DDRB |= 0xFF;	//set every pin on PORTB as an output
  ee:	84 b1       	in	r24, 0x04	; 4
  f0:	8f ef       	ldi	r24, 0xFF	; 255
  f2:	84 b9       	out	0x04, r24	; 4
	
//////////////
//TIMER 0
//////////////
	DDRD &= ~(1<<PD4); //set PORTD.4 as input. pin PD4 uses TIMER0 and PC0 connects to this pin
  f4:	54 98       	cbi	0x0a, 4	; 10
						//for the binary counter to properly count on the LEDs.
	
	TCCR0A = 0; //timer 0 in normal mode
  f6:	14 bc       	out	0x24, r1	; 36
	TCCR0B = 0x07; //external clock on TIMER0
  f8:	87 e0       	ldi	r24, 0x07	; 7
  fa:	85 bd       	out	0x25, r24	; 37
	TCNT0 = 0;	//initialize binary count sequence
  fc:	16 bc       	out	0x26, r1	; 38
	
//////////////
//INTERRUPTS
//////////////
	PCICR |= (1<<PCIE1); //turn on pin change interrupts for PORTC
  fe:	e8 e6       	ldi	r30, 0x68	; 104
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	82 60       	ori	r24, 0x02	; 2
 106:	80 83       	st	Z, r24
	PCIFR |= (1<<PCIF1); //turn on pin change interrupt flag for PORTC
 108:	d9 9a       	sbi	0x1b, 1	; 27
	PCMSK1 |= (1<<PCINT8); //turn on PC0 (PCINT8) for interrupt usage (PCMSK1 is for PORTC)
 10a:	ec e6       	ldi	r30, 0x6C	; 108
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	80 81       	ld	r24, Z
 110:	81 60       	ori	r24, 0x01	; 1
 112:	80 83       	st	Z, r24
	
	sei(); //set interrupts
 114:	78 94       	sei
//BINARY COUNTER
//////////////
	
	while(1) //generate waveform of 50% DC with 0.5 sec period
	{
		PORTC &= ~(1<<PC0);	//PORTC.0 low
 116:	40 98       	cbi	0x08, 0	; 8
		delay_msec(25); //delay for 250 ms
 118:	89 e1       	ldi	r24, 0x19	; 25
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	0e 94 48 00 	call	0x90	; 0x90 <delay_msec>
		
		PORTC |= (1<<PC0);	//PORTC.0 high
 120:	40 9a       	sbi	0x08, 0	; 8
		PORTB = TCNT0+1;	//binary count sequence incremented by 1 each loop
 122:	86 b5       	in	r24, 0x26	; 38
 124:	8f 5f       	subi	r24, 0xFF	; 255
 126:	85 b9       	out	0x05, r24	; 5
		
		delay_msec(25); //delay for 250 ms
 128:	89 e1       	ldi	r24, 0x19	; 25
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 48 00 	call	0x90	; 0x90 <delay_msec>
	}
 130:	f2 cf       	rjmp	.-28     	; 0x116 <main+0x2e>

00000132 <__vector_4>:
//////////////
//INTERRUPT SERVICE ROUTINE
//////////////

ISR (PCINT1_vect) //PC0 is in the PCINT1_vect
{
 132:	1f 92       	push	r1
 134:	0f 92       	push	r0
 136:	0f b6       	in	r0, 0x3f	; 63
 138:	0f 92       	push	r0
 13a:	11 24       	eor	r1, r1
 13c:	5f 93       	push	r21
 13e:	6f 93       	push	r22
 140:	7f 93       	push	r23
 142:	8f 93       	push	r24
 144:	9f 93       	push	r25
 146:	af 93       	push	r26
 148:	bf 93       	push	r27
	if(!(PORTC & (1<<PC0)) == 0)	//if PC0 is changed from low to high
 14a:	40 9b       	sbis	0x08, 0	; 8
 14c:	21 c0       	rjmp	.+66     	; 0x190 <__vector_4+0x5e>
	{
		static int risingCounter = 0; //used to detect every 5th and 10th rising edge
		risingCounter++;
 14e:	80 91 00 01 	lds	r24, 0x0100
 152:	90 91 01 01 	lds	r25, 0x0101
 156:	01 96       	adiw	r24, 0x01	; 1
 158:	90 93 01 01 	sts	0x0101, r25
 15c:	80 93 00 01 	sts	0x0100, r24
		
		if(risingCounter%5 == 0) //PC4 toggles every 5 rising pulses
 160:	65 e0       	ldi	r22, 0x05	; 5
 162:	70 e0       	ldi	r23, 0x00	; 0
 164:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__divmodhi4>
 168:	89 2b       	or	r24, r25
 16a:	21 f4       	brne	.+8      	; 0x174 <__vector_4+0x42>
		PORTC ^= (1<<PC4);
 16c:	98 b1       	in	r25, 0x08	; 8
 16e:	80 e1       	ldi	r24, 0x10	; 16
 170:	89 27       	eor	r24, r25
 172:	88 b9       	out	0x08, r24	; 8
		
		if(risingCounter%10 == 0) //PC5 toggles every 10 rising pulses
 174:	80 91 00 01 	lds	r24, 0x0100
 178:	90 91 01 01 	lds	r25, 0x0101
 17c:	6a e0       	ldi	r22, 0x0A	; 10
 17e:	70 e0       	ldi	r23, 0x00	; 0
 180:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__divmodhi4>
 184:	89 2b       	or	r24, r25
 186:	21 f4       	brne	.+8      	; 0x190 <__vector_4+0x5e>
		PORTC ^= (1<<PC5);
 188:	98 b1       	in	r25, 0x08	; 8
 18a:	80 e2       	ldi	r24, 0x20	; 32
 18c:	89 27       	eor	r24, r25
 18e:	88 b9       	out	0x08, r24	; 8
	}
	
	return;
}
 190:	bf 91       	pop	r27
 192:	af 91       	pop	r26
 194:	9f 91       	pop	r25
 196:	8f 91       	pop	r24
 198:	7f 91       	pop	r23
 19a:	6f 91       	pop	r22
 19c:	5f 91       	pop	r21
 19e:	0f 90       	pop	r0
 1a0:	0f be       	out	0x3f, r0	; 63
 1a2:	0f 90       	pop	r0
 1a4:	1f 90       	pop	r1
 1a6:	18 95       	reti

000001a8 <__subsf3>:
 1a8:	50 58       	subi	r21, 0x80	; 128

000001aa <__addsf3>:
 1aa:	bb 27       	eor	r27, r27
 1ac:	aa 27       	eor	r26, r26
 1ae:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <__addsf3x>
 1b2:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__fp_round>
 1b6:	0e 94 2f 02 	call	0x45e	; 0x45e <__fp_pscA>
 1ba:	38 f0       	brcs	.+14     	; 0x1ca <__addsf3+0x20>
 1bc:	0e 94 36 02 	call	0x46c	; 0x46c <__fp_pscB>
 1c0:	20 f0       	brcs	.+8      	; 0x1ca <__addsf3+0x20>
 1c2:	39 f4       	brne	.+14     	; 0x1d2 <__addsf3+0x28>
 1c4:	9f 3f       	cpi	r25, 0xFF	; 255
 1c6:	19 f4       	brne	.+6      	; 0x1ce <__addsf3+0x24>
 1c8:	26 f4       	brtc	.+8      	; 0x1d2 <__addsf3+0x28>
 1ca:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_nan>
 1ce:	0e f4       	brtc	.+2      	; 0x1d2 <__addsf3+0x28>
 1d0:	e0 95       	com	r30
 1d2:	e7 fb       	bst	r30, 7
 1d4:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_inf>

000001d8 <__addsf3x>:
 1d8:	e9 2f       	mov	r30, r25
 1da:	0e 94 4e 02 	call	0x49c	; 0x49c <__fp_split3>
 1de:	58 f3       	brcs	.-42     	; 0x1b6 <__addsf3+0xc>
 1e0:	ba 17       	cp	r27, r26
 1e2:	62 07       	cpc	r22, r18
 1e4:	73 07       	cpc	r23, r19
 1e6:	84 07       	cpc	r24, r20
 1e8:	95 07       	cpc	r25, r21
 1ea:	20 f0       	brcs	.+8      	; 0x1f4 <__addsf3x+0x1c>
 1ec:	79 f4       	brne	.+30     	; 0x20c <__addsf3x+0x34>
 1ee:	a6 f5       	brtc	.+104    	; 0x258 <__addsf3x+0x80>
 1f0:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <__fp_zero>
 1f4:	0e f4       	brtc	.+2      	; 0x1f8 <__addsf3x+0x20>
 1f6:	e0 95       	com	r30
 1f8:	0b 2e       	mov	r0, r27
 1fa:	ba 2f       	mov	r27, r26
 1fc:	a0 2d       	mov	r26, r0
 1fe:	0b 01       	movw	r0, r22
 200:	b9 01       	movw	r22, r18
 202:	90 01       	movw	r18, r0
 204:	0c 01       	movw	r0, r24
 206:	ca 01       	movw	r24, r20
 208:	a0 01       	movw	r20, r0
 20a:	11 24       	eor	r1, r1
 20c:	ff 27       	eor	r31, r31
 20e:	59 1b       	sub	r21, r25
 210:	99 f0       	breq	.+38     	; 0x238 <__addsf3x+0x60>
 212:	59 3f       	cpi	r21, 0xF9	; 249
 214:	50 f4       	brcc	.+20     	; 0x22a <__addsf3x+0x52>
 216:	50 3e       	cpi	r21, 0xE0	; 224
 218:	68 f1       	brcs	.+90     	; 0x274 <__addsf3x+0x9c>
 21a:	1a 16       	cp	r1, r26
 21c:	f0 40       	sbci	r31, 0x00	; 0
 21e:	a2 2f       	mov	r26, r18
 220:	23 2f       	mov	r18, r19
 222:	34 2f       	mov	r19, r20
 224:	44 27       	eor	r20, r20
 226:	58 5f       	subi	r21, 0xF8	; 248
 228:	f3 cf       	rjmp	.-26     	; 0x210 <__addsf3x+0x38>
 22a:	46 95       	lsr	r20
 22c:	37 95       	ror	r19
 22e:	27 95       	ror	r18
 230:	a7 95       	ror	r26
 232:	f0 40       	sbci	r31, 0x00	; 0
 234:	53 95       	inc	r21
 236:	c9 f7       	brne	.-14     	; 0x22a <__addsf3x+0x52>
 238:	7e f4       	brtc	.+30     	; 0x258 <__addsf3x+0x80>
 23a:	1f 16       	cp	r1, r31
 23c:	ba 0b       	sbc	r27, r26
 23e:	62 0b       	sbc	r22, r18
 240:	73 0b       	sbc	r23, r19
 242:	84 0b       	sbc	r24, r20
 244:	ba f0       	brmi	.+46     	; 0x274 <__addsf3x+0x9c>
 246:	91 50       	subi	r25, 0x01	; 1
 248:	a1 f0       	breq	.+40     	; 0x272 <__addsf3x+0x9a>
 24a:	ff 0f       	add	r31, r31
 24c:	bb 1f       	adc	r27, r27
 24e:	66 1f       	adc	r22, r22
 250:	77 1f       	adc	r23, r23
 252:	88 1f       	adc	r24, r24
 254:	c2 f7       	brpl	.-16     	; 0x246 <__addsf3x+0x6e>
 256:	0e c0       	rjmp	.+28     	; 0x274 <__addsf3x+0x9c>
 258:	ba 0f       	add	r27, r26
 25a:	62 1f       	adc	r22, r18
 25c:	73 1f       	adc	r23, r19
 25e:	84 1f       	adc	r24, r20
 260:	48 f4       	brcc	.+18     	; 0x274 <__addsf3x+0x9c>
 262:	87 95       	ror	r24
 264:	77 95       	ror	r23
 266:	67 95       	ror	r22
 268:	b7 95       	ror	r27
 26a:	f7 95       	ror	r31
 26c:	9e 3f       	cpi	r25, 0xFE	; 254
 26e:	08 f0       	brcs	.+2      	; 0x272 <__addsf3x+0x9a>
 270:	b0 cf       	rjmp	.-160    	; 0x1d2 <__addsf3+0x28>
 272:	93 95       	inc	r25
 274:	88 0f       	add	r24, r24
 276:	08 f0       	brcs	.+2      	; 0x27a <__addsf3x+0xa2>
 278:	99 27       	eor	r25, r25
 27a:	ee 0f       	add	r30, r30
 27c:	97 95       	ror	r25
 27e:	87 95       	ror	r24
 280:	08 95       	ret

00000282 <__divsf3>:
 282:	0e 94 55 01 	call	0x2aa	; 0x2aa <__divsf3x>
 286:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__fp_round>
 28a:	0e 94 36 02 	call	0x46c	; 0x46c <__fp_pscB>
 28e:	58 f0       	brcs	.+22     	; 0x2a6 <__divsf3+0x24>
 290:	0e 94 2f 02 	call	0x45e	; 0x45e <__fp_pscA>
 294:	40 f0       	brcs	.+16     	; 0x2a6 <__divsf3+0x24>
 296:	29 f4       	brne	.+10     	; 0x2a2 <__divsf3+0x20>
 298:	5f 3f       	cpi	r21, 0xFF	; 255
 29a:	29 f0       	breq	.+10     	; 0x2a6 <__divsf3+0x24>
 29c:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_inf>
 2a0:	51 11       	cpse	r21, r1
 2a2:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_szero>
 2a6:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_nan>

000002aa <__divsf3x>:
 2aa:	0e 94 4e 02 	call	0x49c	; 0x49c <__fp_split3>
 2ae:	68 f3       	brcs	.-38     	; 0x28a <__divsf3+0x8>

000002b0 <__divsf3_pse>:
 2b0:	99 23       	and	r25, r25
 2b2:	b1 f3       	breq	.-20     	; 0x2a0 <__divsf3+0x1e>
 2b4:	55 23       	and	r21, r21
 2b6:	91 f3       	breq	.-28     	; 0x29c <__divsf3+0x1a>
 2b8:	95 1b       	sub	r25, r21
 2ba:	55 0b       	sbc	r21, r21
 2bc:	bb 27       	eor	r27, r27
 2be:	aa 27       	eor	r26, r26
 2c0:	62 17       	cp	r22, r18
 2c2:	73 07       	cpc	r23, r19
 2c4:	84 07       	cpc	r24, r20
 2c6:	38 f0       	brcs	.+14     	; 0x2d6 <__divsf3_pse+0x26>
 2c8:	9f 5f       	subi	r25, 0xFF	; 255
 2ca:	5f 4f       	sbci	r21, 0xFF	; 255
 2cc:	22 0f       	add	r18, r18
 2ce:	33 1f       	adc	r19, r19
 2d0:	44 1f       	adc	r20, r20
 2d2:	aa 1f       	adc	r26, r26
 2d4:	a9 f3       	breq	.-22     	; 0x2c0 <__divsf3_pse+0x10>
 2d6:	35 d0       	rcall	.+106    	; 0x342 <__divsf3_pse+0x92>
 2d8:	0e 2e       	mov	r0, r30
 2da:	3a f0       	brmi	.+14     	; 0x2ea <__divsf3_pse+0x3a>
 2dc:	e0 e8       	ldi	r30, 0x80	; 128
 2de:	32 d0       	rcall	.+100    	; 0x344 <__divsf3_pse+0x94>
 2e0:	91 50       	subi	r25, 0x01	; 1
 2e2:	50 40       	sbci	r21, 0x00	; 0
 2e4:	e6 95       	lsr	r30
 2e6:	00 1c       	adc	r0, r0
 2e8:	ca f7       	brpl	.-14     	; 0x2dc <__divsf3_pse+0x2c>
 2ea:	2b d0       	rcall	.+86     	; 0x342 <__divsf3_pse+0x92>
 2ec:	fe 2f       	mov	r31, r30
 2ee:	29 d0       	rcall	.+82     	; 0x342 <__divsf3_pse+0x92>
 2f0:	66 0f       	add	r22, r22
 2f2:	77 1f       	adc	r23, r23
 2f4:	88 1f       	adc	r24, r24
 2f6:	bb 1f       	adc	r27, r27
 2f8:	26 17       	cp	r18, r22
 2fa:	37 07       	cpc	r19, r23
 2fc:	48 07       	cpc	r20, r24
 2fe:	ab 07       	cpc	r26, r27
 300:	b0 e8       	ldi	r27, 0x80	; 128
 302:	09 f0       	breq	.+2      	; 0x306 <__divsf3_pse+0x56>
 304:	bb 0b       	sbc	r27, r27
 306:	80 2d       	mov	r24, r0
 308:	bf 01       	movw	r22, r30
 30a:	ff 27       	eor	r31, r31
 30c:	93 58       	subi	r25, 0x83	; 131
 30e:	5f 4f       	sbci	r21, 0xFF	; 255
 310:	3a f0       	brmi	.+14     	; 0x320 <__divsf3_pse+0x70>
 312:	9e 3f       	cpi	r25, 0xFE	; 254
 314:	51 05       	cpc	r21, r1
 316:	78 f0       	brcs	.+30     	; 0x336 <__divsf3_pse+0x86>
 318:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_inf>
 31c:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_szero>
 320:	5f 3f       	cpi	r21, 0xFF	; 255
 322:	e4 f3       	brlt	.-8      	; 0x31c <__divsf3_pse+0x6c>
 324:	98 3e       	cpi	r25, 0xE8	; 232
 326:	d4 f3       	brlt	.-12     	; 0x31c <__divsf3_pse+0x6c>
 328:	86 95       	lsr	r24
 32a:	77 95       	ror	r23
 32c:	67 95       	ror	r22
 32e:	b7 95       	ror	r27
 330:	f7 95       	ror	r31
 332:	9f 5f       	subi	r25, 0xFF	; 255
 334:	c9 f7       	brne	.-14     	; 0x328 <__divsf3_pse+0x78>
 336:	88 0f       	add	r24, r24
 338:	91 1d       	adc	r25, r1
 33a:	96 95       	lsr	r25
 33c:	87 95       	ror	r24
 33e:	97 f9       	bld	r25, 7
 340:	08 95       	ret
 342:	e1 e0       	ldi	r30, 0x01	; 1
 344:	66 0f       	add	r22, r22
 346:	77 1f       	adc	r23, r23
 348:	88 1f       	adc	r24, r24
 34a:	bb 1f       	adc	r27, r27
 34c:	62 17       	cp	r22, r18
 34e:	73 07       	cpc	r23, r19
 350:	84 07       	cpc	r24, r20
 352:	ba 07       	cpc	r27, r26
 354:	20 f0       	brcs	.+8      	; 0x35e <__divsf3_pse+0xae>
 356:	62 1b       	sub	r22, r18
 358:	73 0b       	sbc	r23, r19
 35a:	84 0b       	sbc	r24, r20
 35c:	ba 0b       	sbc	r27, r26
 35e:	ee 1f       	adc	r30, r30
 360:	88 f7       	brcc	.-30     	; 0x344 <__divsf3_pse+0x94>
 362:	e0 95       	com	r30
 364:	08 95       	ret

00000366 <__fixsfsi>:
 366:	0e 94 ba 01 	call	0x374	; 0x374 <__fixunssfsi>
 36a:	68 94       	set
 36c:	b1 11       	cpse	r27, r1
 36e:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_szero>
 372:	08 95       	ret

00000374 <__fixunssfsi>:
 374:	0e 94 56 02 	call	0x4ac	; 0x4ac <__fp_splitA>
 378:	88 f0       	brcs	.+34     	; 0x39c <__fixunssfsi+0x28>
 37a:	9f 57       	subi	r25, 0x7F	; 127
 37c:	98 f0       	brcs	.+38     	; 0x3a4 <__fixunssfsi+0x30>
 37e:	b9 2f       	mov	r27, r25
 380:	99 27       	eor	r25, r25
 382:	b7 51       	subi	r27, 0x17	; 23
 384:	b0 f0       	brcs	.+44     	; 0x3b2 <__fixunssfsi+0x3e>
 386:	e1 f0       	breq	.+56     	; 0x3c0 <__fixunssfsi+0x4c>
 388:	66 0f       	add	r22, r22
 38a:	77 1f       	adc	r23, r23
 38c:	88 1f       	adc	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	1a f0       	brmi	.+6      	; 0x398 <__fixunssfsi+0x24>
 392:	ba 95       	dec	r27
 394:	c9 f7       	brne	.-14     	; 0x388 <__fixunssfsi+0x14>
 396:	14 c0       	rjmp	.+40     	; 0x3c0 <__fixunssfsi+0x4c>
 398:	b1 30       	cpi	r27, 0x01	; 1
 39a:	91 f0       	breq	.+36     	; 0x3c0 <__fixunssfsi+0x4c>
 39c:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__fp_zero>
 3a0:	b1 e0       	ldi	r27, 0x01	; 1
 3a2:	08 95       	ret
 3a4:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <__fp_zero>
 3a8:	67 2f       	mov	r22, r23
 3aa:	78 2f       	mov	r23, r24
 3ac:	88 27       	eor	r24, r24
 3ae:	b8 5f       	subi	r27, 0xF8	; 248
 3b0:	39 f0       	breq	.+14     	; 0x3c0 <__fixunssfsi+0x4c>
 3b2:	b9 3f       	cpi	r27, 0xF9	; 249
 3b4:	cc f3       	brlt	.-14     	; 0x3a8 <__fixunssfsi+0x34>
 3b6:	86 95       	lsr	r24
 3b8:	77 95       	ror	r23
 3ba:	67 95       	ror	r22
 3bc:	b3 95       	inc	r27
 3be:	d9 f7       	brne	.-10     	; 0x3b6 <__fixunssfsi+0x42>
 3c0:	3e f4       	brtc	.+14     	; 0x3d0 <__fixunssfsi+0x5c>
 3c2:	90 95       	com	r25
 3c4:	80 95       	com	r24
 3c6:	70 95       	com	r23
 3c8:	61 95       	neg	r22
 3ca:	7f 4f       	sbci	r23, 0xFF	; 255
 3cc:	8f 4f       	sbci	r24, 0xFF	; 255
 3ce:	9f 4f       	sbci	r25, 0xFF	; 255
 3d0:	08 95       	ret

000003d2 <__floatunsisf>:
 3d2:	e8 94       	clt
 3d4:	09 c0       	rjmp	.+18     	; 0x3e8 <__floatsisf+0x12>

000003d6 <__floatsisf>:
 3d6:	97 fb       	bst	r25, 7
 3d8:	3e f4       	brtc	.+14     	; 0x3e8 <__floatsisf+0x12>
 3da:	90 95       	com	r25
 3dc:	80 95       	com	r24
 3de:	70 95       	com	r23
 3e0:	61 95       	neg	r22
 3e2:	7f 4f       	sbci	r23, 0xFF	; 255
 3e4:	8f 4f       	sbci	r24, 0xFF	; 255
 3e6:	9f 4f       	sbci	r25, 0xFF	; 255
 3e8:	99 23       	and	r25, r25
 3ea:	a9 f0       	breq	.+42     	; 0x416 <__floatsisf+0x40>
 3ec:	f9 2f       	mov	r31, r25
 3ee:	96 e9       	ldi	r25, 0x96	; 150
 3f0:	bb 27       	eor	r27, r27
 3f2:	93 95       	inc	r25
 3f4:	f6 95       	lsr	r31
 3f6:	87 95       	ror	r24
 3f8:	77 95       	ror	r23
 3fa:	67 95       	ror	r22
 3fc:	b7 95       	ror	r27
 3fe:	f1 11       	cpse	r31, r1
 400:	f8 cf       	rjmp	.-16     	; 0x3f2 <__floatsisf+0x1c>
 402:	fa f4       	brpl	.+62     	; 0x442 <__floatsisf+0x6c>
 404:	bb 0f       	add	r27, r27
 406:	11 f4       	brne	.+4      	; 0x40c <__floatsisf+0x36>
 408:	60 ff       	sbrs	r22, 0
 40a:	1b c0       	rjmp	.+54     	; 0x442 <__floatsisf+0x6c>
 40c:	6f 5f       	subi	r22, 0xFF	; 255
 40e:	7f 4f       	sbci	r23, 0xFF	; 255
 410:	8f 4f       	sbci	r24, 0xFF	; 255
 412:	9f 4f       	sbci	r25, 0xFF	; 255
 414:	16 c0       	rjmp	.+44     	; 0x442 <__floatsisf+0x6c>
 416:	88 23       	and	r24, r24
 418:	11 f0       	breq	.+4      	; 0x41e <__floatsisf+0x48>
 41a:	96 e9       	ldi	r25, 0x96	; 150
 41c:	11 c0       	rjmp	.+34     	; 0x440 <__floatsisf+0x6a>
 41e:	77 23       	and	r23, r23
 420:	21 f0       	breq	.+8      	; 0x42a <__floatsisf+0x54>
 422:	9e e8       	ldi	r25, 0x8E	; 142
 424:	87 2f       	mov	r24, r23
 426:	76 2f       	mov	r23, r22
 428:	05 c0       	rjmp	.+10     	; 0x434 <__floatsisf+0x5e>
 42a:	66 23       	and	r22, r22
 42c:	71 f0       	breq	.+28     	; 0x44a <__floatsisf+0x74>
 42e:	96 e8       	ldi	r25, 0x86	; 134
 430:	86 2f       	mov	r24, r22
 432:	70 e0       	ldi	r23, 0x00	; 0
 434:	60 e0       	ldi	r22, 0x00	; 0
 436:	2a f0       	brmi	.+10     	; 0x442 <__floatsisf+0x6c>
 438:	9a 95       	dec	r25
 43a:	66 0f       	add	r22, r22
 43c:	77 1f       	adc	r23, r23
 43e:	88 1f       	adc	r24, r24
 440:	da f7       	brpl	.-10     	; 0x438 <__floatsisf+0x62>
 442:	88 0f       	add	r24, r24
 444:	96 95       	lsr	r25
 446:	87 95       	ror	r24
 448:	97 f9       	bld	r25, 7
 44a:	08 95       	ret

0000044c <__fp_inf>:
 44c:	97 f9       	bld	r25, 7
 44e:	9f 67       	ori	r25, 0x7F	; 127
 450:	80 e8       	ldi	r24, 0x80	; 128
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	08 95       	ret

00000458 <__fp_nan>:
 458:	9f ef       	ldi	r25, 0xFF	; 255
 45a:	80 ec       	ldi	r24, 0xC0	; 192
 45c:	08 95       	ret

0000045e <__fp_pscA>:
 45e:	00 24       	eor	r0, r0
 460:	0a 94       	dec	r0
 462:	16 16       	cp	r1, r22
 464:	17 06       	cpc	r1, r23
 466:	18 06       	cpc	r1, r24
 468:	09 06       	cpc	r0, r25
 46a:	08 95       	ret

0000046c <__fp_pscB>:
 46c:	00 24       	eor	r0, r0
 46e:	0a 94       	dec	r0
 470:	12 16       	cp	r1, r18
 472:	13 06       	cpc	r1, r19
 474:	14 06       	cpc	r1, r20
 476:	05 06       	cpc	r0, r21
 478:	08 95       	ret

0000047a <__fp_round>:
 47a:	09 2e       	mov	r0, r25
 47c:	03 94       	inc	r0
 47e:	00 0c       	add	r0, r0
 480:	11 f4       	brne	.+4      	; 0x486 <__fp_round+0xc>
 482:	88 23       	and	r24, r24
 484:	52 f0       	brmi	.+20     	; 0x49a <__fp_round+0x20>
 486:	bb 0f       	add	r27, r27
 488:	40 f4       	brcc	.+16     	; 0x49a <__fp_round+0x20>
 48a:	bf 2b       	or	r27, r31
 48c:	11 f4       	brne	.+4      	; 0x492 <__fp_round+0x18>
 48e:	60 ff       	sbrs	r22, 0
 490:	04 c0       	rjmp	.+8      	; 0x49a <__fp_round+0x20>
 492:	6f 5f       	subi	r22, 0xFF	; 255
 494:	7f 4f       	sbci	r23, 0xFF	; 255
 496:	8f 4f       	sbci	r24, 0xFF	; 255
 498:	9f 4f       	sbci	r25, 0xFF	; 255
 49a:	08 95       	ret

0000049c <__fp_split3>:
 49c:	57 fd       	sbrc	r21, 7
 49e:	90 58       	subi	r25, 0x80	; 128
 4a0:	44 0f       	add	r20, r20
 4a2:	55 1f       	adc	r21, r21
 4a4:	59 f0       	breq	.+22     	; 0x4bc <__fp_splitA+0x10>
 4a6:	5f 3f       	cpi	r21, 0xFF	; 255
 4a8:	71 f0       	breq	.+28     	; 0x4c6 <__fp_splitA+0x1a>
 4aa:	47 95       	ror	r20

000004ac <__fp_splitA>:
 4ac:	88 0f       	add	r24, r24
 4ae:	97 fb       	bst	r25, 7
 4b0:	99 1f       	adc	r25, r25
 4b2:	61 f0       	breq	.+24     	; 0x4cc <__fp_splitA+0x20>
 4b4:	9f 3f       	cpi	r25, 0xFF	; 255
 4b6:	79 f0       	breq	.+30     	; 0x4d6 <__fp_splitA+0x2a>
 4b8:	87 95       	ror	r24
 4ba:	08 95       	ret
 4bc:	12 16       	cp	r1, r18
 4be:	13 06       	cpc	r1, r19
 4c0:	14 06       	cpc	r1, r20
 4c2:	55 1f       	adc	r21, r21
 4c4:	f2 cf       	rjmp	.-28     	; 0x4aa <__fp_split3+0xe>
 4c6:	46 95       	lsr	r20
 4c8:	f1 df       	rcall	.-30     	; 0x4ac <__fp_splitA>
 4ca:	08 c0       	rjmp	.+16     	; 0x4dc <__fp_splitA+0x30>
 4cc:	16 16       	cp	r1, r22
 4ce:	17 06       	cpc	r1, r23
 4d0:	18 06       	cpc	r1, r24
 4d2:	99 1f       	adc	r25, r25
 4d4:	f1 cf       	rjmp	.-30     	; 0x4b8 <__fp_splitA+0xc>
 4d6:	86 95       	lsr	r24
 4d8:	71 05       	cpc	r23, r1
 4da:	61 05       	cpc	r22, r1
 4dc:	08 94       	sec
 4de:	08 95       	ret

000004e0 <__fp_zero>:
 4e0:	e8 94       	clt

000004e2 <__fp_szero>:
 4e2:	bb 27       	eor	r27, r27
 4e4:	66 27       	eor	r22, r22
 4e6:	77 27       	eor	r23, r23
 4e8:	cb 01       	movw	r24, r22
 4ea:	97 f9       	bld	r25, 7
 4ec:	08 95       	ret

000004ee <__mulsf3>:
 4ee:	0e 94 8a 02 	call	0x514	; 0x514 <__mulsf3x>
 4f2:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__fp_round>
 4f6:	0e 94 2f 02 	call	0x45e	; 0x45e <__fp_pscA>
 4fa:	38 f0       	brcs	.+14     	; 0x50a <__mulsf3+0x1c>
 4fc:	0e 94 36 02 	call	0x46c	; 0x46c <__fp_pscB>
 500:	20 f0       	brcs	.+8      	; 0x50a <__mulsf3+0x1c>
 502:	95 23       	and	r25, r21
 504:	11 f0       	breq	.+4      	; 0x50a <__mulsf3+0x1c>
 506:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_inf>
 50a:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_nan>
 50e:	11 24       	eor	r1, r1
 510:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_szero>

00000514 <__mulsf3x>:
 514:	0e 94 4e 02 	call	0x49c	; 0x49c <__fp_split3>
 518:	70 f3       	brcs	.-36     	; 0x4f6 <__mulsf3+0x8>

0000051a <__mulsf3_pse>:
 51a:	95 9f       	mul	r25, r21
 51c:	c1 f3       	breq	.-16     	; 0x50e <__mulsf3+0x20>
 51e:	95 0f       	add	r25, r21
 520:	50 e0       	ldi	r21, 0x00	; 0
 522:	55 1f       	adc	r21, r21
 524:	62 9f       	mul	r22, r18
 526:	f0 01       	movw	r30, r0
 528:	72 9f       	mul	r23, r18
 52a:	bb 27       	eor	r27, r27
 52c:	f0 0d       	add	r31, r0
 52e:	b1 1d       	adc	r27, r1
 530:	63 9f       	mul	r22, r19
 532:	aa 27       	eor	r26, r26
 534:	f0 0d       	add	r31, r0
 536:	b1 1d       	adc	r27, r1
 538:	aa 1f       	adc	r26, r26
 53a:	64 9f       	mul	r22, r20
 53c:	66 27       	eor	r22, r22
 53e:	b0 0d       	add	r27, r0
 540:	a1 1d       	adc	r26, r1
 542:	66 1f       	adc	r22, r22
 544:	82 9f       	mul	r24, r18
 546:	22 27       	eor	r18, r18
 548:	b0 0d       	add	r27, r0
 54a:	a1 1d       	adc	r26, r1
 54c:	62 1f       	adc	r22, r18
 54e:	73 9f       	mul	r23, r19
 550:	b0 0d       	add	r27, r0
 552:	a1 1d       	adc	r26, r1
 554:	62 1f       	adc	r22, r18
 556:	83 9f       	mul	r24, r19
 558:	a0 0d       	add	r26, r0
 55a:	61 1d       	adc	r22, r1
 55c:	22 1f       	adc	r18, r18
 55e:	74 9f       	mul	r23, r20
 560:	33 27       	eor	r19, r19
 562:	a0 0d       	add	r26, r0
 564:	61 1d       	adc	r22, r1
 566:	23 1f       	adc	r18, r19
 568:	84 9f       	mul	r24, r20
 56a:	60 0d       	add	r22, r0
 56c:	21 1d       	adc	r18, r1
 56e:	82 2f       	mov	r24, r18
 570:	76 2f       	mov	r23, r22
 572:	6a 2f       	mov	r22, r26
 574:	11 24       	eor	r1, r1
 576:	9f 57       	subi	r25, 0x7F	; 127
 578:	50 40       	sbci	r21, 0x00	; 0
 57a:	9a f0       	brmi	.+38     	; 0x5a2 <__mulsf3_pse+0x88>
 57c:	f1 f0       	breq	.+60     	; 0x5ba <__mulsf3_pse+0xa0>
 57e:	88 23       	and	r24, r24
 580:	4a f0       	brmi	.+18     	; 0x594 <__mulsf3_pse+0x7a>
 582:	ee 0f       	add	r30, r30
 584:	ff 1f       	adc	r31, r31
 586:	bb 1f       	adc	r27, r27
 588:	66 1f       	adc	r22, r22
 58a:	77 1f       	adc	r23, r23
 58c:	88 1f       	adc	r24, r24
 58e:	91 50       	subi	r25, 0x01	; 1
 590:	50 40       	sbci	r21, 0x00	; 0
 592:	a9 f7       	brne	.-22     	; 0x57e <__mulsf3_pse+0x64>
 594:	9e 3f       	cpi	r25, 0xFE	; 254
 596:	51 05       	cpc	r21, r1
 598:	80 f0       	brcs	.+32     	; 0x5ba <__mulsf3_pse+0xa0>
 59a:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_inf>
 59e:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_szero>
 5a2:	5f 3f       	cpi	r21, 0xFF	; 255
 5a4:	e4 f3       	brlt	.-8      	; 0x59e <__mulsf3_pse+0x84>
 5a6:	98 3e       	cpi	r25, 0xE8	; 232
 5a8:	d4 f3       	brlt	.-12     	; 0x59e <__mulsf3_pse+0x84>
 5aa:	86 95       	lsr	r24
 5ac:	77 95       	ror	r23
 5ae:	67 95       	ror	r22
 5b0:	b7 95       	ror	r27
 5b2:	f7 95       	ror	r31
 5b4:	e7 95       	ror	r30
 5b6:	9f 5f       	subi	r25, 0xFF	; 255
 5b8:	c1 f7       	brne	.-16     	; 0x5aa <__mulsf3_pse+0x90>
 5ba:	fe 2b       	or	r31, r30
 5bc:	88 0f       	add	r24, r24
 5be:	91 1d       	adc	r25, r1
 5c0:	96 95       	lsr	r25
 5c2:	87 95       	ror	r24
 5c4:	97 f9       	bld	r25, 7
 5c6:	08 95       	ret

000005c8 <__divmodhi4>:
 5c8:	97 fb       	bst	r25, 7
 5ca:	07 2e       	mov	r0, r23
 5cc:	16 f4       	brtc	.+4      	; 0x5d2 <__divmodhi4+0xa>
 5ce:	00 94       	com	r0
 5d0:	07 d0       	rcall	.+14     	; 0x5e0 <__divmodhi4_neg1>
 5d2:	77 fd       	sbrc	r23, 7
 5d4:	09 d0       	rcall	.+18     	; 0x5e8 <__divmodhi4_neg2>
 5d6:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__udivmodhi4>
 5da:	07 fc       	sbrc	r0, 7
 5dc:	05 d0       	rcall	.+10     	; 0x5e8 <__divmodhi4_neg2>
 5de:	3e f4       	brtc	.+14     	; 0x5ee <__divmodhi4_exit>

000005e0 <__divmodhi4_neg1>:
 5e0:	90 95       	com	r25
 5e2:	81 95       	neg	r24
 5e4:	9f 4f       	sbci	r25, 0xFF	; 255
 5e6:	08 95       	ret

000005e8 <__divmodhi4_neg2>:
 5e8:	70 95       	com	r23
 5ea:	61 95       	neg	r22
 5ec:	7f 4f       	sbci	r23, 0xFF	; 255

000005ee <__divmodhi4_exit>:
 5ee:	08 95       	ret

000005f0 <__udivmodhi4>:
 5f0:	aa 1b       	sub	r26, r26
 5f2:	bb 1b       	sub	r27, r27
 5f4:	51 e1       	ldi	r21, 0x11	; 17
 5f6:	07 c0       	rjmp	.+14     	; 0x606 <__udivmodhi4_ep>

000005f8 <__udivmodhi4_loop>:
 5f8:	aa 1f       	adc	r26, r26
 5fa:	bb 1f       	adc	r27, r27
 5fc:	a6 17       	cp	r26, r22
 5fe:	b7 07       	cpc	r27, r23
 600:	10 f0       	brcs	.+4      	; 0x606 <__udivmodhi4_ep>
 602:	a6 1b       	sub	r26, r22
 604:	b7 0b       	sbc	r27, r23

00000606 <__udivmodhi4_ep>:
 606:	88 1f       	adc	r24, r24
 608:	99 1f       	adc	r25, r25
 60a:	5a 95       	dec	r21
 60c:	a9 f7       	brne	.-22     	; 0x5f8 <__udivmodhi4_loop>
 60e:	80 95       	com	r24
 610:	90 95       	com	r25
 612:	bc 01       	movw	r22, r24
 614:	cd 01       	movw	r24, r26
 616:	08 95       	ret

00000618 <_exit>:
 618:	f8 94       	cli

0000061a <__stop_program>:
 61a:	ff cf       	rjmp	.-2      	; 0x61a <__stop_program>
